Version 3.2 HI-TECH Software Intermediate Code
"4 eeprom.h
[u S139 `i 1 `uc -> 2 `i ]
[n S139 intsep twobyte byte ]
[p mainexit ]
"1817 /Applications/microchip/xc8/v1.34/include/pic16f887.h
[v _OSCCON `Vuc ~T0 @X0 0 e@143 ]
"3314
[v _ANSEL `Vuc ~T0 @X0 0 e@392 ]
"447
[v _INTCON `Vuc ~T0 @X0 0 e@11 ]
"915
[v _CCP1CON `Vuc ~T0 @X0 0 e@23 ]
"1135
[v _CCP2CON `Vuc ~T0 @X0 0 e@29 ]
"3000
[v _CM1CON0 `Vuc ~T0 @X0 0 e@263 ]
"3064
[v _CM2CON0 `Vuc ~T0 @X0 0 e@264 ]
"1379
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"1440
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"1501
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
"1562
[v _TRISD `Vuc ~T0 @X0 0 e@136 ]
"1623
[v _TRISE `Vuc ~T0 @X0 0 e@137 ]
"160
[v _PORTA `Vuc ~T0 @X0 0 e@5 ]
"221
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"282
[v _PORTC `Vuc ~T0 @X0 0 e@7 ]
"343
[v _PORTD `Vuc ~T0 @X0 0 e@8 ]
"404
[v _PORTE `Vuc ~T0 @X0 0 e@9 ]
"24 lcd.h
[v _lcd_init `(v ~T0 @X0 0 ef ]
"20
[v _lcd_goto `(v ~T0 @X0 0 ef1`uc ]
"16
[v _lcd_puts `(v ~T0 @X0 0 ef1`*Cuc ]
"54 main.c
[v _ButtonPush `(i ~T0 @X0 0 ef ]
"13 eeprom.h
[v _eeprom_init `(v ~T0 @X0 0 ef2`uc`uc ]
"15
[v _eeprom_read_int `(i ~T0 @X0 0 ef1`uc ]
"47 main.c
[v _ModeSelect `(v ~T0 @X0 0 ef ]
"48
[v _SetCheckRow `(v ~T0 @X0 0 ef ]
"49
[v _SetNumberOfTimes `(v ~T0 @X0 0 ef ]
"50
[v _Confirm `(v ~T0 @X0 0 ef ]
"51
[v _CheckDo `(v ~T0 @X0 0 ef ]
"52
[v _DebugMode `(v ~T0 @X0 0 ef ]
"53
[v _ShowResult `(v ~T0 @X0 0 ef ]
"57
[v _Setting `(v ~T0 @X0 0 ef ]
"12 lcd.h
[v _lcd_clear `(v ~T0 @X0 0 ef ]
"56 main.c
[v _IndicateSelectedMode `(v ~T0 @X0 0 ef1`uc ]
"55
[v _IndicadeSettingMode `(v ~T0 @X0 0 ef1`i ]
"58
[v _SetIntervalTime `(v ~T0 @X0 0 ef ]
"26 lcd.h
[v _lcd_putch `(v ~T0 @X0 0 ef1`uc ]
"35
[v _lcd_cmd `(v ~T0 @X0 0 ef1`uc ]
"37
[v _lcd_putint `(v ~T0 @X0 0 ef5`*uc`i`i`i`uc ]
"14 eeprom.h
[v _eeprom_write_int `(i ~T0 @X0 0 ef2`uc`i ]
[v F1637 `(v ~T0 @X0 1 tf1`ul ]
"150 /Applications/microchip/xc8/v1.34/include/pic.h
[v __delay `JF1637 ~T0 @X0 0 e ]
[p i __delay ]
"3868 /Applications/microchip/xc8/v1.34/include/pic16f887.h
[v _RC2 `Vb ~T0 @X0 0 e@58 ]
"3866
[v _RC1 `Vb ~T0 @X0 0 e@57 ]
"3864
[v _RC0 `Vb ~T0 @X0 0 e@56 ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic16f887.h: 49: extern volatile unsigned char INDF @ 0x000;
"51 /Applications/microchip/xc8/v1.34/include/pic16f887.h
[; ;pic16f887.h: 51: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f887.h: 55: extern volatile unsigned char TMR0 @ 0x001;
"57
[; ;pic16f887.h: 57: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f887.h: 61: extern volatile unsigned char PCL @ 0x002;
"63
[; ;pic16f887.h: 63: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f887.h: 67: extern volatile unsigned char STATUS @ 0x003;
"69
[; ;pic16f887.h: 69: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f887.h: 72: typedef union {
[; ;pic16f887.h: 73: struct {
[; ;pic16f887.h: 74: unsigned C :1;
[; ;pic16f887.h: 75: unsigned DC :1;
[; ;pic16f887.h: 76: unsigned Z :1;
[; ;pic16f887.h: 77: unsigned nPD :1;
[; ;pic16f887.h: 78: unsigned nTO :1;
[; ;pic16f887.h: 79: unsigned RP :2;
[; ;pic16f887.h: 80: unsigned IRP :1;
[; ;pic16f887.h: 81: };
[; ;pic16f887.h: 82: struct {
[; ;pic16f887.h: 83: unsigned :5;
[; ;pic16f887.h: 84: unsigned RP0 :1;
[; ;pic16f887.h: 85: unsigned RP1 :1;
[; ;pic16f887.h: 86: };
[; ;pic16f887.h: 87: struct {
[; ;pic16f887.h: 88: unsigned CARRY :1;
[; ;pic16f887.h: 89: };
[; ;pic16f887.h: 90: struct {
[; ;pic16f887.h: 91: unsigned :2;
[; ;pic16f887.h: 92: unsigned ZERO :1;
[; ;pic16f887.h: 93: };
[; ;pic16f887.h: 94: } STATUSbits_t;
[; ;pic16f887.h: 95: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f887.h: 154: extern volatile unsigned char FSR @ 0x004;
"156
[; ;pic16f887.h: 156: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f887.h: 160: extern volatile unsigned char PORTA @ 0x005;
"162
[; ;pic16f887.h: 162: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f887.h: 165: typedef union {
[; ;pic16f887.h: 166: struct {
[; ;pic16f887.h: 167: unsigned RA0 :1;
[; ;pic16f887.h: 168: unsigned RA1 :1;
[; ;pic16f887.h: 169: unsigned RA2 :1;
[; ;pic16f887.h: 170: unsigned RA3 :1;
[; ;pic16f887.h: 171: unsigned RA4 :1;
[; ;pic16f887.h: 172: unsigned RA5 :1;
[; ;pic16f887.h: 173: unsigned RA6 :1;
[; ;pic16f887.h: 174: unsigned RA7 :1;
[; ;pic16f887.h: 175: };
[; ;pic16f887.h: 176: } PORTAbits_t;
[; ;pic16f887.h: 177: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f887.h: 221: extern volatile unsigned char PORTB @ 0x006;
"223
[; ;pic16f887.h: 223: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f887.h: 226: typedef union {
[; ;pic16f887.h: 227: struct {
[; ;pic16f887.h: 228: unsigned RB0 :1;
[; ;pic16f887.h: 229: unsigned RB1 :1;
[; ;pic16f887.h: 230: unsigned RB2 :1;
[; ;pic16f887.h: 231: unsigned RB3 :1;
[; ;pic16f887.h: 232: unsigned RB4 :1;
[; ;pic16f887.h: 233: unsigned RB5 :1;
[; ;pic16f887.h: 234: unsigned RB6 :1;
[; ;pic16f887.h: 235: unsigned RB7 :1;
[; ;pic16f887.h: 236: };
[; ;pic16f887.h: 237: } PORTBbits_t;
[; ;pic16f887.h: 238: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f887.h: 282: extern volatile unsigned char PORTC @ 0x007;
"284
[; ;pic16f887.h: 284: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f887.h: 287: typedef union {
[; ;pic16f887.h: 288: struct {
[; ;pic16f887.h: 289: unsigned RC0 :1;
[; ;pic16f887.h: 290: unsigned RC1 :1;
[; ;pic16f887.h: 291: unsigned RC2 :1;
[; ;pic16f887.h: 292: unsigned RC3 :1;
[; ;pic16f887.h: 293: unsigned RC4 :1;
[; ;pic16f887.h: 294: unsigned RC5 :1;
[; ;pic16f887.h: 295: unsigned RC6 :1;
[; ;pic16f887.h: 296: unsigned RC7 :1;
[; ;pic16f887.h: 297: };
[; ;pic16f887.h: 298: } PORTCbits_t;
[; ;pic16f887.h: 299: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f887.h: 343: extern volatile unsigned char PORTD @ 0x008;
"345
[; ;pic16f887.h: 345: asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
[; ;pic16f887.h: 348: typedef union {
[; ;pic16f887.h: 349: struct {
[; ;pic16f887.h: 350: unsigned RD0 :1;
[; ;pic16f887.h: 351: unsigned RD1 :1;
[; ;pic16f887.h: 352: unsigned RD2 :1;
[; ;pic16f887.h: 353: unsigned RD3 :1;
[; ;pic16f887.h: 354: unsigned RD4 :1;
[; ;pic16f887.h: 355: unsigned RD5 :1;
[; ;pic16f887.h: 356: unsigned RD6 :1;
[; ;pic16f887.h: 357: unsigned RD7 :1;
[; ;pic16f887.h: 358: };
[; ;pic16f887.h: 359: } PORTDbits_t;
[; ;pic16f887.h: 360: extern volatile PORTDbits_t PORTDbits @ 0x008;
[; ;pic16f887.h: 404: extern volatile unsigned char PORTE @ 0x009;
"406
[; ;pic16f887.h: 406: asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
[; ;pic16f887.h: 409: typedef union {
[; ;pic16f887.h: 410: struct {
[; ;pic16f887.h: 411: unsigned RE0 :1;
[; ;pic16f887.h: 412: unsigned RE1 :1;
[; ;pic16f887.h: 413: unsigned RE2 :1;
[; ;pic16f887.h: 414: unsigned RE3 :1;
[; ;pic16f887.h: 415: };
[; ;pic16f887.h: 416: } PORTEbits_t;
[; ;pic16f887.h: 417: extern volatile PORTEbits_t PORTEbits @ 0x009;
[; ;pic16f887.h: 441: extern volatile unsigned char PCLATH @ 0x00A;
"443
[; ;pic16f887.h: 443: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f887.h: 447: extern volatile unsigned char INTCON @ 0x00B;
"449
[; ;pic16f887.h: 449: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f887.h: 452: typedef union {
[; ;pic16f887.h: 453: struct {
[; ;pic16f887.h: 454: unsigned RBIF :1;
[; ;pic16f887.h: 455: unsigned INTF :1;
[; ;pic16f887.h: 456: unsigned T0IF :1;
[; ;pic16f887.h: 457: unsigned RBIE :1;
[; ;pic16f887.h: 458: unsigned INTE :1;
[; ;pic16f887.h: 459: unsigned T0IE :1;
[; ;pic16f887.h: 460: unsigned PEIE :1;
[; ;pic16f887.h: 461: unsigned GIE :1;
[; ;pic16f887.h: 462: };
[; ;pic16f887.h: 463: struct {
[; ;pic16f887.h: 464: unsigned :2;
[; ;pic16f887.h: 465: unsigned TMR0IF :1;
[; ;pic16f887.h: 466: unsigned :2;
[; ;pic16f887.h: 467: unsigned TMR0IE :1;
[; ;pic16f887.h: 468: };
[; ;pic16f887.h: 469: } INTCONbits_t;
[; ;pic16f887.h: 470: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f887.h: 524: extern volatile unsigned char PIR1 @ 0x00C;
"526
[; ;pic16f887.h: 526: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f887.h: 529: typedef union {
[; ;pic16f887.h: 530: struct {
[; ;pic16f887.h: 531: unsigned TMR1IF :1;
[; ;pic16f887.h: 532: unsigned TMR2IF :1;
[; ;pic16f887.h: 533: unsigned CCP1IF :1;
[; ;pic16f887.h: 534: unsigned SSPIF :1;
[; ;pic16f887.h: 535: unsigned TXIF :1;
[; ;pic16f887.h: 536: unsigned RCIF :1;
[; ;pic16f887.h: 537: unsigned ADIF :1;
[; ;pic16f887.h: 538: };
[; ;pic16f887.h: 539: } PIR1bits_t;
[; ;pic16f887.h: 540: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f887.h: 579: extern volatile unsigned char PIR2 @ 0x00D;
"581
[; ;pic16f887.h: 581: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f887.h: 584: typedef union {
[; ;pic16f887.h: 585: struct {
[; ;pic16f887.h: 586: unsigned CCP2IF :1;
[; ;pic16f887.h: 587: unsigned :1;
[; ;pic16f887.h: 588: unsigned ULPWUIF :1;
[; ;pic16f887.h: 589: unsigned BCLIF :1;
[; ;pic16f887.h: 590: unsigned EEIF :1;
[; ;pic16f887.h: 591: unsigned C1IF :1;
[; ;pic16f887.h: 592: unsigned C2IF :1;
[; ;pic16f887.h: 593: unsigned OSFIF :1;
[; ;pic16f887.h: 594: };
[; ;pic16f887.h: 595: } PIR2bits_t;
[; ;pic16f887.h: 596: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;pic16f887.h: 635: extern volatile unsigned short TMR1 @ 0x00E;
"637
[; ;pic16f887.h: 637: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f887.h: 641: extern volatile unsigned char TMR1L @ 0x00E;
"643
[; ;pic16f887.h: 643: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f887.h: 647: extern volatile unsigned char TMR1H @ 0x00F;
"649
[; ;pic16f887.h: 649: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f887.h: 653: extern volatile unsigned char T1CON @ 0x010;
"655
[; ;pic16f887.h: 655: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f887.h: 658: typedef union {
[; ;pic16f887.h: 659: struct {
[; ;pic16f887.h: 660: unsigned TMR1ON :1;
[; ;pic16f887.h: 661: unsigned TMR1CS :1;
[; ;pic16f887.h: 662: unsigned nT1SYNC :1;
[; ;pic16f887.h: 663: unsigned T1OSCEN :1;
[; ;pic16f887.h: 664: unsigned T1CKPS :2;
[; ;pic16f887.h: 665: unsigned TMR1GE :1;
[; ;pic16f887.h: 666: unsigned T1GINV :1;
[; ;pic16f887.h: 667: };
[; ;pic16f887.h: 668: struct {
[; ;pic16f887.h: 669: unsigned :2;
[; ;pic16f887.h: 670: unsigned T1INSYNC :1;
[; ;pic16f887.h: 671: unsigned :1;
[; ;pic16f887.h: 672: unsigned T1CKPS0 :1;
[; ;pic16f887.h: 673: unsigned T1CKPS1 :1;
[; ;pic16f887.h: 674: unsigned :1;
[; ;pic16f887.h: 675: unsigned T1GIV :1;
[; ;pic16f887.h: 676: };
[; ;pic16f887.h: 677: struct {
[; ;pic16f887.h: 678: unsigned :2;
[; ;pic16f887.h: 679: unsigned T1SYNC :1;
[; ;pic16f887.h: 680: };
[; ;pic16f887.h: 681: } T1CONbits_t;
[; ;pic16f887.h: 682: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f887.h: 746: extern volatile unsigned char TMR2 @ 0x011;
"748
[; ;pic16f887.h: 748: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f887.h: 752: extern volatile unsigned char T2CON @ 0x012;
"754
[; ;pic16f887.h: 754: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f887.h: 757: typedef union {
[; ;pic16f887.h: 758: struct {
[; ;pic16f887.h: 759: unsigned T2CKPS :2;
[; ;pic16f887.h: 760: unsigned TMR2ON :1;
[; ;pic16f887.h: 761: unsigned TOUTPS :4;
[; ;pic16f887.h: 762: };
[; ;pic16f887.h: 763: struct {
[; ;pic16f887.h: 764: unsigned T2CKPS0 :1;
[; ;pic16f887.h: 765: unsigned T2CKPS1 :1;
[; ;pic16f887.h: 766: unsigned :1;
[; ;pic16f887.h: 767: unsigned TOUTPS0 :1;
[; ;pic16f887.h: 768: unsigned TOUTPS1 :1;
[; ;pic16f887.h: 769: unsigned TOUTPS2 :1;
[; ;pic16f887.h: 770: unsigned TOUTPS3 :1;
[; ;pic16f887.h: 771: };
[; ;pic16f887.h: 772: } T2CONbits_t;
[; ;pic16f887.h: 773: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f887.h: 822: extern volatile unsigned char SSPBUF @ 0x013;
"824
[; ;pic16f887.h: 824: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f887.h: 828: extern volatile unsigned char SSPCON @ 0x014;
"830
[; ;pic16f887.h: 830: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f887.h: 833: typedef union {
[; ;pic16f887.h: 834: struct {
[; ;pic16f887.h: 835: unsigned SSPM :4;
[; ;pic16f887.h: 836: unsigned CKP :1;
[; ;pic16f887.h: 837: unsigned SSPEN :1;
[; ;pic16f887.h: 838: unsigned SSPOV :1;
[; ;pic16f887.h: 839: unsigned WCOL :1;
[; ;pic16f887.h: 840: };
[; ;pic16f887.h: 841: struct {
[; ;pic16f887.h: 842: unsigned SSPM0 :1;
[; ;pic16f887.h: 843: unsigned SSPM1 :1;
[; ;pic16f887.h: 844: unsigned SSPM2 :1;
[; ;pic16f887.h: 845: unsigned SSPM3 :1;
[; ;pic16f887.h: 846: };
[; ;pic16f887.h: 847: } SSPCONbits_t;
[; ;pic16f887.h: 848: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;pic16f887.h: 897: extern volatile unsigned short CCPR1 @ 0x015;
"899
[; ;pic16f887.h: 899: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f887.h: 903: extern volatile unsigned char CCPR1L @ 0x015;
"905
[; ;pic16f887.h: 905: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f887.h: 909: extern volatile unsigned char CCPR1H @ 0x016;
"911
[; ;pic16f887.h: 911: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f887.h: 915: extern volatile unsigned char CCP1CON @ 0x017;
"917
[; ;pic16f887.h: 917: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f887.h: 920: typedef union {
[; ;pic16f887.h: 921: struct {
[; ;pic16f887.h: 922: unsigned CCP1M :4;
[; ;pic16f887.h: 923: unsigned DC1B :2;
[; ;pic16f887.h: 924: unsigned P1M :2;
[; ;pic16f887.h: 925: };
[; ;pic16f887.h: 926: struct {
[; ;pic16f887.h: 927: unsigned CCP1M0 :1;
[; ;pic16f887.h: 928: unsigned CCP1M1 :1;
[; ;pic16f887.h: 929: unsigned CCP1M2 :1;
[; ;pic16f887.h: 930: unsigned CCP1M3 :1;
[; ;pic16f887.h: 931: unsigned DC1B0 :1;
[; ;pic16f887.h: 932: unsigned DC1B1 :1;
[; ;pic16f887.h: 933: unsigned P1M0 :1;
[; ;pic16f887.h: 934: unsigned P1M1 :1;
[; ;pic16f887.h: 935: };
[; ;pic16f887.h: 936: struct {
[; ;pic16f887.h: 937: unsigned :4;
[; ;pic16f887.h: 938: unsigned CCP1Y :1;
[; ;pic16f887.h: 939: unsigned CCP1X :1;
[; ;pic16f887.h: 940: };
[; ;pic16f887.h: 941: } CCP1CONbits_t;
[; ;pic16f887.h: 942: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f887.h: 1011: extern volatile unsigned char RCSTA @ 0x018;
"1013
[; ;pic16f887.h: 1013: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f887.h: 1016: typedef union {
[; ;pic16f887.h: 1017: struct {
[; ;pic16f887.h: 1018: unsigned RX9D :1;
[; ;pic16f887.h: 1019: unsigned OERR :1;
[; ;pic16f887.h: 1020: unsigned FERR :1;
[; ;pic16f887.h: 1021: unsigned ADDEN :1;
[; ;pic16f887.h: 1022: unsigned CREN :1;
[; ;pic16f887.h: 1023: unsigned SREN :1;
[; ;pic16f887.h: 1024: unsigned RX9 :1;
[; ;pic16f887.h: 1025: unsigned SPEN :1;
[; ;pic16f887.h: 1026: };
[; ;pic16f887.h: 1027: struct {
[; ;pic16f887.h: 1028: unsigned RCD8 :1;
[; ;pic16f887.h: 1029: unsigned :5;
[; ;pic16f887.h: 1030: unsigned RC9 :1;
[; ;pic16f887.h: 1031: };
[; ;pic16f887.h: 1032: struct {
[; ;pic16f887.h: 1033: unsigned :6;
[; ;pic16f887.h: 1034: unsigned nRC8 :1;
[; ;pic16f887.h: 1035: };
[; ;pic16f887.h: 1036: struct {
[; ;pic16f887.h: 1037: unsigned :6;
[; ;pic16f887.h: 1038: unsigned RC8_9 :1;
[; ;pic16f887.h: 1039: };
[; ;pic16f887.h: 1040: } RCSTAbits_t;
[; ;pic16f887.h: 1041: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f887.h: 1105: extern volatile unsigned char TXREG @ 0x019;
"1107
[; ;pic16f887.h: 1107: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f887.h: 1111: extern volatile unsigned char RCREG @ 0x01A;
"1113
[; ;pic16f887.h: 1113: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f887.h: 1117: extern volatile unsigned short CCPR2 @ 0x01B;
"1119
[; ;pic16f887.h: 1119: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16f887.h: 1123: extern volatile unsigned char CCPR2L @ 0x01B;
"1125
[; ;pic16f887.h: 1125: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16f887.h: 1129: extern volatile unsigned char CCPR2H @ 0x01C;
"1131
[; ;pic16f887.h: 1131: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16f887.h: 1135: extern volatile unsigned char CCP2CON @ 0x01D;
"1137
[; ;pic16f887.h: 1137: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16f887.h: 1140: typedef union {
[; ;pic16f887.h: 1141: struct {
[; ;pic16f887.h: 1142: unsigned CCP2M :4;
[; ;pic16f887.h: 1143: unsigned DC2B0 :1;
[; ;pic16f887.h: 1144: unsigned DC2B1 :1;
[; ;pic16f887.h: 1145: };
[; ;pic16f887.h: 1146: struct {
[; ;pic16f887.h: 1147: unsigned CCP2M0 :1;
[; ;pic16f887.h: 1148: unsigned CCP2M1 :1;
[; ;pic16f887.h: 1149: unsigned CCP2M2 :1;
[; ;pic16f887.h: 1150: unsigned CCP2M3 :1;
[; ;pic16f887.h: 1151: unsigned CCP2Y :1;
[; ;pic16f887.h: 1152: unsigned CCP2X :1;
[; ;pic16f887.h: 1153: };
[; ;pic16f887.h: 1154: } CCP2CONbits_t;
[; ;pic16f887.h: 1155: extern volatile CCP2CONbits_t CCP2CONbits @ 0x01D;
[; ;pic16f887.h: 1204: extern volatile unsigned char ADRESH @ 0x01E;
"1206
[; ;pic16f887.h: 1206: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f887.h: 1210: extern volatile unsigned char ADCON0 @ 0x01F;
"1212
[; ;pic16f887.h: 1212: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f887.h: 1215: typedef union {
[; ;pic16f887.h: 1216: struct {
[; ;pic16f887.h: 1217: unsigned ADON :1;
[; ;pic16f887.h: 1218: unsigned GO_nDONE :1;
[; ;pic16f887.h: 1219: unsigned CHS :4;
[; ;pic16f887.h: 1220: unsigned ADCS :2;
[; ;pic16f887.h: 1221: };
[; ;pic16f887.h: 1222: struct {
[; ;pic16f887.h: 1223: unsigned :1;
[; ;pic16f887.h: 1224: unsigned GO :1;
[; ;pic16f887.h: 1225: unsigned CHS0 :1;
[; ;pic16f887.h: 1226: unsigned CHS1 :1;
[; ;pic16f887.h: 1227: unsigned CHS2 :1;
[; ;pic16f887.h: 1228: unsigned CHS3 :1;
[; ;pic16f887.h: 1229: unsigned ADCS0 :1;
[; ;pic16f887.h: 1230: unsigned ADCS1 :1;
[; ;pic16f887.h: 1231: };
[; ;pic16f887.h: 1232: struct {
[; ;pic16f887.h: 1233: unsigned :1;
[; ;pic16f887.h: 1234: unsigned nDONE :1;
[; ;pic16f887.h: 1235: };
[; ;pic16f887.h: 1236: struct {
[; ;pic16f887.h: 1237: unsigned :1;
[; ;pic16f887.h: 1238: unsigned GO_DONE :1;
[; ;pic16f887.h: 1239: };
[; ;pic16f887.h: 1240: } ADCON0bits_t;
[; ;pic16f887.h: 1241: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f887.h: 1310: extern volatile unsigned char OPTION_REG @ 0x081;
"1312
[; ;pic16f887.h: 1312: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f887.h: 1315: typedef union {
[; ;pic16f887.h: 1316: struct {
[; ;pic16f887.h: 1317: unsigned PS :3;
[; ;pic16f887.h: 1318: unsigned PSA :1;
[; ;pic16f887.h: 1319: unsigned T0SE :1;
[; ;pic16f887.h: 1320: unsigned T0CS :1;
[; ;pic16f887.h: 1321: unsigned INTEDG :1;
[; ;pic16f887.h: 1322: unsigned nRBPU :1;
[; ;pic16f887.h: 1323: };
[; ;pic16f887.h: 1324: struct {
[; ;pic16f887.h: 1325: unsigned PS0 :1;
[; ;pic16f887.h: 1326: unsigned PS1 :1;
[; ;pic16f887.h: 1327: unsigned PS2 :1;
[; ;pic16f887.h: 1328: };
[; ;pic16f887.h: 1329: } OPTION_REGbits_t;
[; ;pic16f887.h: 1330: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f887.h: 1379: extern volatile unsigned char TRISA @ 0x085;
"1381
[; ;pic16f887.h: 1381: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f887.h: 1384: typedef union {
[; ;pic16f887.h: 1385: struct {
[; ;pic16f887.h: 1386: unsigned TRISA0 :1;
[; ;pic16f887.h: 1387: unsigned TRISA1 :1;
[; ;pic16f887.h: 1388: unsigned TRISA2 :1;
[; ;pic16f887.h: 1389: unsigned TRISA3 :1;
[; ;pic16f887.h: 1390: unsigned TRISA4 :1;
[; ;pic16f887.h: 1391: unsigned TRISA5 :1;
[; ;pic16f887.h: 1392: unsigned TRISA6 :1;
[; ;pic16f887.h: 1393: unsigned TRISA7 :1;
[; ;pic16f887.h: 1394: };
[; ;pic16f887.h: 1395: } TRISAbits_t;
[; ;pic16f887.h: 1396: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f887.h: 1440: extern volatile unsigned char TRISB @ 0x086;
"1442
[; ;pic16f887.h: 1442: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f887.h: 1445: typedef union {
[; ;pic16f887.h: 1446: struct {
[; ;pic16f887.h: 1447: unsigned TRISB0 :1;
[; ;pic16f887.h: 1448: unsigned TRISB1 :1;
[; ;pic16f887.h: 1449: unsigned TRISB2 :1;
[; ;pic16f887.h: 1450: unsigned TRISB3 :1;
[; ;pic16f887.h: 1451: unsigned TRISB4 :1;
[; ;pic16f887.h: 1452: unsigned TRISB5 :1;
[; ;pic16f887.h: 1453: unsigned TRISB6 :1;
[; ;pic16f887.h: 1454: unsigned TRISB7 :1;
[; ;pic16f887.h: 1455: };
[; ;pic16f887.h: 1456: } TRISBbits_t;
[; ;pic16f887.h: 1457: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f887.h: 1501: extern volatile unsigned char TRISC @ 0x087;
"1503
[; ;pic16f887.h: 1503: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f887.h: 1506: typedef union {
[; ;pic16f887.h: 1507: struct {
[; ;pic16f887.h: 1508: unsigned TRISC0 :1;
[; ;pic16f887.h: 1509: unsigned TRISC1 :1;
[; ;pic16f887.h: 1510: unsigned TRISC2 :1;
[; ;pic16f887.h: 1511: unsigned TRISC3 :1;
[; ;pic16f887.h: 1512: unsigned TRISC4 :1;
[; ;pic16f887.h: 1513: unsigned TRISC5 :1;
[; ;pic16f887.h: 1514: unsigned TRISC6 :1;
[; ;pic16f887.h: 1515: unsigned TRISC7 :1;
[; ;pic16f887.h: 1516: };
[; ;pic16f887.h: 1517: } TRISCbits_t;
[; ;pic16f887.h: 1518: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f887.h: 1562: extern volatile unsigned char TRISD @ 0x088;
"1564
[; ;pic16f887.h: 1564: asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
[; ;pic16f887.h: 1567: typedef union {
[; ;pic16f887.h: 1568: struct {
[; ;pic16f887.h: 1569: unsigned TRISD0 :1;
[; ;pic16f887.h: 1570: unsigned TRISD1 :1;
[; ;pic16f887.h: 1571: unsigned TRISD2 :1;
[; ;pic16f887.h: 1572: unsigned TRISD3 :1;
[; ;pic16f887.h: 1573: unsigned TRISD4 :1;
[; ;pic16f887.h: 1574: unsigned TRISD5 :1;
[; ;pic16f887.h: 1575: unsigned TRISD6 :1;
[; ;pic16f887.h: 1576: unsigned TRISD7 :1;
[; ;pic16f887.h: 1577: };
[; ;pic16f887.h: 1578: } TRISDbits_t;
[; ;pic16f887.h: 1579: extern volatile TRISDbits_t TRISDbits @ 0x088;
[; ;pic16f887.h: 1623: extern volatile unsigned char TRISE @ 0x089;
"1625
[; ;pic16f887.h: 1625: asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
[; ;pic16f887.h: 1628: typedef union {
[; ;pic16f887.h: 1629: struct {
[; ;pic16f887.h: 1630: unsigned TRISE0 :1;
[; ;pic16f887.h: 1631: unsigned TRISE1 :1;
[; ;pic16f887.h: 1632: unsigned TRISE2 :1;
[; ;pic16f887.h: 1633: unsigned TRISE3 :1;
[; ;pic16f887.h: 1634: };
[; ;pic16f887.h: 1635: } TRISEbits_t;
[; ;pic16f887.h: 1636: extern volatile TRISEbits_t TRISEbits @ 0x089;
[; ;pic16f887.h: 1660: extern volatile unsigned char PIE1 @ 0x08C;
"1662
[; ;pic16f887.h: 1662: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f887.h: 1665: typedef union {
[; ;pic16f887.h: 1666: struct {
[; ;pic16f887.h: 1667: unsigned TMR1IE :1;
[; ;pic16f887.h: 1668: unsigned TMR2IE :1;
[; ;pic16f887.h: 1669: unsigned CCP1IE :1;
[; ;pic16f887.h: 1670: unsigned SSPIE :1;
[; ;pic16f887.h: 1671: unsigned TXIE :1;
[; ;pic16f887.h: 1672: unsigned RCIE :1;
[; ;pic16f887.h: 1673: unsigned ADIE :1;
[; ;pic16f887.h: 1674: };
[; ;pic16f887.h: 1675: } PIE1bits_t;
[; ;pic16f887.h: 1676: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f887.h: 1715: extern volatile unsigned char PIE2 @ 0x08D;
"1717
[; ;pic16f887.h: 1717: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f887.h: 1720: typedef union {
[; ;pic16f887.h: 1721: struct {
[; ;pic16f887.h: 1722: unsigned CCP2IE :1;
[; ;pic16f887.h: 1723: unsigned :1;
[; ;pic16f887.h: 1724: unsigned ULPWUIE :1;
[; ;pic16f887.h: 1725: unsigned BCLIE :1;
[; ;pic16f887.h: 1726: unsigned EEIE :1;
[; ;pic16f887.h: 1727: unsigned C1IE :1;
[; ;pic16f887.h: 1728: unsigned C2IE :1;
[; ;pic16f887.h: 1729: unsigned OSFIE :1;
[; ;pic16f887.h: 1730: };
[; ;pic16f887.h: 1731: } PIE2bits_t;
[; ;pic16f887.h: 1732: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;pic16f887.h: 1771: extern volatile unsigned char PCON @ 0x08E;
"1773
[; ;pic16f887.h: 1773: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f887.h: 1776: typedef union {
[; ;pic16f887.h: 1777: struct {
[; ;pic16f887.h: 1778: unsigned nBOR :1;
[; ;pic16f887.h: 1779: unsigned nPOR :1;
[; ;pic16f887.h: 1780: unsigned :2;
[; ;pic16f887.h: 1781: unsigned SBOREN :1;
[; ;pic16f887.h: 1782: unsigned ULPWUE :1;
[; ;pic16f887.h: 1783: };
[; ;pic16f887.h: 1784: struct {
[; ;pic16f887.h: 1785: unsigned nBO :1;
[; ;pic16f887.h: 1786: };
[; ;pic16f887.h: 1787: } PCONbits_t;
[; ;pic16f887.h: 1788: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f887.h: 1817: extern volatile unsigned char OSCCON @ 0x08F;
"1819
[; ;pic16f887.h: 1819: asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
[; ;pic16f887.h: 1822: typedef union {
[; ;pic16f887.h: 1823: struct {
[; ;pic16f887.h: 1824: unsigned SCS :1;
[; ;pic16f887.h: 1825: unsigned LTS :1;
[; ;pic16f887.h: 1826: unsigned HTS :1;
[; ;pic16f887.h: 1827: unsigned OSTS :1;
[; ;pic16f887.h: 1828: unsigned IRCF :3;
[; ;pic16f887.h: 1829: };
[; ;pic16f887.h: 1830: struct {
[; ;pic16f887.h: 1831: unsigned :4;
[; ;pic16f887.h: 1832: unsigned IRCF0 :1;
[; ;pic16f887.h: 1833: unsigned IRCF1 :1;
[; ;pic16f887.h: 1834: unsigned IRCF2 :1;
[; ;pic16f887.h: 1835: };
[; ;pic16f887.h: 1836: } OSCCONbits_t;
[; ;pic16f887.h: 1837: extern volatile OSCCONbits_t OSCCONbits @ 0x08F;
[; ;pic16f887.h: 1881: extern volatile unsigned char OSCTUNE @ 0x090;
"1883
[; ;pic16f887.h: 1883: asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
[; ;pic16f887.h: 1886: typedef union {
[; ;pic16f887.h: 1887: struct {
[; ;pic16f887.h: 1888: unsigned TUN :5;
[; ;pic16f887.h: 1889: };
[; ;pic16f887.h: 1890: struct {
[; ;pic16f887.h: 1891: unsigned TUN0 :1;
[; ;pic16f887.h: 1892: unsigned TUN1 :1;
[; ;pic16f887.h: 1893: unsigned TUN2 :1;
[; ;pic16f887.h: 1894: unsigned TUN3 :1;
[; ;pic16f887.h: 1895: unsigned TUN4 :1;
[; ;pic16f887.h: 1896: };
[; ;pic16f887.h: 1897: } OSCTUNEbits_t;
[; ;pic16f887.h: 1898: extern volatile OSCTUNEbits_t OSCTUNEbits @ 0x090;
[; ;pic16f887.h: 1932: extern volatile unsigned char SSPCON2 @ 0x091;
"1934
[; ;pic16f887.h: 1934: asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
[; ;pic16f887.h: 1937: typedef union {
[; ;pic16f887.h: 1938: struct {
[; ;pic16f887.h: 1939: unsigned SEN :1;
[; ;pic16f887.h: 1940: unsigned RSEN :1;
[; ;pic16f887.h: 1941: unsigned PEN :1;
[; ;pic16f887.h: 1942: unsigned RCEN :1;
[; ;pic16f887.h: 1943: unsigned ACKEN :1;
[; ;pic16f887.h: 1944: unsigned ACKDT :1;
[; ;pic16f887.h: 1945: unsigned ACKSTAT :1;
[; ;pic16f887.h: 1946: unsigned GCEN :1;
[; ;pic16f887.h: 1947: };
[; ;pic16f887.h: 1948: } SSPCON2bits_t;
[; ;pic16f887.h: 1949: extern volatile SSPCON2bits_t SSPCON2bits @ 0x091;
[; ;pic16f887.h: 1993: extern volatile unsigned char PR2 @ 0x092;
"1995
[; ;pic16f887.h: 1995: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f887.h: 1999: extern volatile unsigned char SSPADD @ 0x093;
"2001
[; ;pic16f887.h: 2001: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f887.h: 2005: extern volatile unsigned char SSPMSK @ 0x093;
"2007
[; ;pic16f887.h: 2007: asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
[; ;pic16f887.h: 2010: extern volatile unsigned char MSK @ 0x093;
"2012
[; ;pic16f887.h: 2012: asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
[; ;pic16f887.h: 2015: typedef union {
[; ;pic16f887.h: 2016: struct {
[; ;pic16f887.h: 2017: unsigned MSK0 :1;
[; ;pic16f887.h: 2018: unsigned MSK1 :1;
[; ;pic16f887.h: 2019: unsigned MSK2 :1;
[; ;pic16f887.h: 2020: unsigned MSK3 :1;
[; ;pic16f887.h: 2021: unsigned MSK4 :1;
[; ;pic16f887.h: 2022: unsigned MSK5 :1;
[; ;pic16f887.h: 2023: unsigned MSK6 :1;
[; ;pic16f887.h: 2024: unsigned MSK7 :1;
[; ;pic16f887.h: 2025: };
[; ;pic16f887.h: 2026: } SSPMSKbits_t;
[; ;pic16f887.h: 2027: extern volatile SSPMSKbits_t SSPMSKbits @ 0x093;
[; ;pic16f887.h: 2070: typedef union {
[; ;pic16f887.h: 2071: struct {
[; ;pic16f887.h: 2072: unsigned MSK0 :1;
[; ;pic16f887.h: 2073: unsigned MSK1 :1;
[; ;pic16f887.h: 2074: unsigned MSK2 :1;
[; ;pic16f887.h: 2075: unsigned MSK3 :1;
[; ;pic16f887.h: 2076: unsigned MSK4 :1;
[; ;pic16f887.h: 2077: unsigned MSK5 :1;
[; ;pic16f887.h: 2078: unsigned MSK6 :1;
[; ;pic16f887.h: 2079: unsigned MSK7 :1;
[; ;pic16f887.h: 2080: };
[; ;pic16f887.h: 2081: } MSKbits_t;
[; ;pic16f887.h: 2082: extern volatile MSKbits_t MSKbits @ 0x093;
[; ;pic16f887.h: 2126: extern volatile unsigned char SSPSTAT @ 0x094;
"2128
[; ;pic16f887.h: 2128: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f887.h: 2131: typedef union {
[; ;pic16f887.h: 2132: struct {
[; ;pic16f887.h: 2133: unsigned BF :1;
[; ;pic16f887.h: 2134: unsigned UA :1;
[; ;pic16f887.h: 2135: unsigned R_nW :1;
[; ;pic16f887.h: 2136: unsigned S :1;
[; ;pic16f887.h: 2137: unsigned P :1;
[; ;pic16f887.h: 2138: unsigned D_nA :1;
[; ;pic16f887.h: 2139: unsigned CKE :1;
[; ;pic16f887.h: 2140: unsigned SMP :1;
[; ;pic16f887.h: 2141: };
[; ;pic16f887.h: 2142: struct {
[; ;pic16f887.h: 2143: unsigned :2;
[; ;pic16f887.h: 2144: unsigned R :1;
[; ;pic16f887.h: 2145: unsigned :2;
[; ;pic16f887.h: 2146: unsigned D :1;
[; ;pic16f887.h: 2147: };
[; ;pic16f887.h: 2148: struct {
[; ;pic16f887.h: 2149: unsigned :2;
[; ;pic16f887.h: 2150: unsigned I2C_READ :1;
[; ;pic16f887.h: 2151: unsigned I2C_START :1;
[; ;pic16f887.h: 2152: unsigned I2C_STOP :1;
[; ;pic16f887.h: 2153: unsigned I2C_DATA :1;
[; ;pic16f887.h: 2154: };
[; ;pic16f887.h: 2155: struct {
[; ;pic16f887.h: 2156: unsigned :2;
[; ;pic16f887.h: 2157: unsigned nW :1;
[; ;pic16f887.h: 2158: unsigned :2;
[; ;pic16f887.h: 2159: unsigned nA :1;
[; ;pic16f887.h: 2160: };
[; ;pic16f887.h: 2161: struct {
[; ;pic16f887.h: 2162: unsigned :2;
[; ;pic16f887.h: 2163: unsigned nWRITE :1;
[; ;pic16f887.h: 2164: unsigned :2;
[; ;pic16f887.h: 2165: unsigned nADDRESS :1;
[; ;pic16f887.h: 2166: };
[; ;pic16f887.h: 2167: struct {
[; ;pic16f887.h: 2168: unsigned :2;
[; ;pic16f887.h: 2169: unsigned R_W :1;
[; ;pic16f887.h: 2170: unsigned :2;
[; ;pic16f887.h: 2171: unsigned D_A :1;
[; ;pic16f887.h: 2172: };
[; ;pic16f887.h: 2173: struct {
[; ;pic16f887.h: 2174: unsigned :2;
[; ;pic16f887.h: 2175: unsigned READ_WRITE :1;
[; ;pic16f887.h: 2176: unsigned :2;
[; ;pic16f887.h: 2177: unsigned DATA_ADDRESS :1;
[; ;pic16f887.h: 2178: };
[; ;pic16f887.h: 2179: } SSPSTATbits_t;
[; ;pic16f887.h: 2180: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;pic16f887.h: 2294: extern volatile unsigned char WPUB @ 0x095;
"2296
[; ;pic16f887.h: 2296: asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
[; ;pic16f887.h: 2299: typedef union {
[; ;pic16f887.h: 2300: struct {
[; ;pic16f887.h: 2301: unsigned WPUB :8;
[; ;pic16f887.h: 2302: };
[; ;pic16f887.h: 2303: struct {
[; ;pic16f887.h: 2304: unsigned WPUB0 :1;
[; ;pic16f887.h: 2305: unsigned WPUB1 :1;
[; ;pic16f887.h: 2306: unsigned WPUB2 :1;
[; ;pic16f887.h: 2307: unsigned WPUB3 :1;
[; ;pic16f887.h: 2308: unsigned WPUB4 :1;
[; ;pic16f887.h: 2309: unsigned WPUB5 :1;
[; ;pic16f887.h: 2310: unsigned WPUB6 :1;
[; ;pic16f887.h: 2311: unsigned WPUB7 :1;
[; ;pic16f887.h: 2312: };
[; ;pic16f887.h: 2313: } WPUBbits_t;
[; ;pic16f887.h: 2314: extern volatile WPUBbits_t WPUBbits @ 0x095;
[; ;pic16f887.h: 2363: extern volatile unsigned char IOCB @ 0x096;
"2365
[; ;pic16f887.h: 2365: asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
[; ;pic16f887.h: 2368: typedef union {
[; ;pic16f887.h: 2369: struct {
[; ;pic16f887.h: 2370: unsigned IOCB :8;
[; ;pic16f887.h: 2371: };
[; ;pic16f887.h: 2372: struct {
[; ;pic16f887.h: 2373: unsigned IOCB0 :1;
[; ;pic16f887.h: 2374: unsigned IOCB1 :1;
[; ;pic16f887.h: 2375: unsigned IOCB2 :1;
[; ;pic16f887.h: 2376: unsigned IOCB3 :1;
[; ;pic16f887.h: 2377: unsigned IOCB4 :1;
[; ;pic16f887.h: 2378: unsigned IOCB5 :1;
[; ;pic16f887.h: 2379: unsigned IOCB6 :1;
[; ;pic16f887.h: 2380: unsigned IOCB7 :1;
[; ;pic16f887.h: 2381: };
[; ;pic16f887.h: 2382: } IOCBbits_t;
[; ;pic16f887.h: 2383: extern volatile IOCBbits_t IOCBbits @ 0x096;
[; ;pic16f887.h: 2432: extern volatile unsigned char VRCON @ 0x097;
"2434
[; ;pic16f887.h: 2434: asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
[; ;pic16f887.h: 2437: typedef union {
[; ;pic16f887.h: 2438: struct {
[; ;pic16f887.h: 2439: unsigned VR :4;
[; ;pic16f887.h: 2440: unsigned VRSS :1;
[; ;pic16f887.h: 2441: unsigned VRR :1;
[; ;pic16f887.h: 2442: unsigned VROE :1;
[; ;pic16f887.h: 2443: unsigned VREN :1;
[; ;pic16f887.h: 2444: };
[; ;pic16f887.h: 2445: struct {
[; ;pic16f887.h: 2446: unsigned VR0 :1;
[; ;pic16f887.h: 2447: unsigned VR1 :1;
[; ;pic16f887.h: 2448: unsigned VR2 :1;
[; ;pic16f887.h: 2449: unsigned VR3 :1;
[; ;pic16f887.h: 2450: };
[; ;pic16f887.h: 2451: } VRCONbits_t;
[; ;pic16f887.h: 2452: extern volatile VRCONbits_t VRCONbits @ 0x097;
[; ;pic16f887.h: 2501: extern volatile unsigned char TXSTA @ 0x098;
"2503
[; ;pic16f887.h: 2503: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f887.h: 2506: typedef union {
[; ;pic16f887.h: 2507: struct {
[; ;pic16f887.h: 2508: unsigned TX9D :1;
[; ;pic16f887.h: 2509: unsigned TRMT :1;
[; ;pic16f887.h: 2510: unsigned BRGH :1;
[; ;pic16f887.h: 2511: unsigned SENDB :1;
[; ;pic16f887.h: 2512: unsigned SYNC :1;
[; ;pic16f887.h: 2513: unsigned TXEN :1;
[; ;pic16f887.h: 2514: unsigned TX9 :1;
[; ;pic16f887.h: 2515: unsigned CSRC :1;
[; ;pic16f887.h: 2516: };
[; ;pic16f887.h: 2517: struct {
[; ;pic16f887.h: 2518: unsigned TXD8 :1;
[; ;pic16f887.h: 2519: unsigned :5;
[; ;pic16f887.h: 2520: unsigned nTX8 :1;
[; ;pic16f887.h: 2521: };
[; ;pic16f887.h: 2522: struct {
[; ;pic16f887.h: 2523: unsigned :6;
[; ;pic16f887.h: 2524: unsigned TX8_9 :1;
[; ;pic16f887.h: 2525: };
[; ;pic16f887.h: 2526: } TXSTAbits_t;
[; ;pic16f887.h: 2527: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f887.h: 2586: extern volatile unsigned char SPBRG @ 0x099;
"2588
[; ;pic16f887.h: 2588: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f887.h: 2591: typedef union {
[; ;pic16f887.h: 2592: struct {
[; ;pic16f887.h: 2593: unsigned BRG0 :1;
[; ;pic16f887.h: 2594: unsigned BRG1 :1;
[; ;pic16f887.h: 2595: unsigned BRG2 :1;
[; ;pic16f887.h: 2596: unsigned BRG3 :1;
[; ;pic16f887.h: 2597: unsigned BRG4 :1;
[; ;pic16f887.h: 2598: unsigned BRG5 :1;
[; ;pic16f887.h: 2599: unsigned BRG6 :1;
[; ;pic16f887.h: 2600: unsigned BRG7 :1;
[; ;pic16f887.h: 2601: };
[; ;pic16f887.h: 2602: } SPBRGbits_t;
[; ;pic16f887.h: 2603: extern volatile SPBRGbits_t SPBRGbits @ 0x099;
[; ;pic16f887.h: 2647: extern volatile unsigned char SPBRGH @ 0x09A;
"2649
[; ;pic16f887.h: 2649: asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
[; ;pic16f887.h: 2652: typedef union {
[; ;pic16f887.h: 2653: struct {
[; ;pic16f887.h: 2654: unsigned SPBRGH :8;
[; ;pic16f887.h: 2655: };
[; ;pic16f887.h: 2656: struct {
[; ;pic16f887.h: 2657: unsigned BRG8 :1;
[; ;pic16f887.h: 2658: unsigned BRG9 :1;
[; ;pic16f887.h: 2659: unsigned BRG10 :1;
[; ;pic16f887.h: 2660: unsigned BRG11 :1;
[; ;pic16f887.h: 2661: unsigned BRG12 :1;
[; ;pic16f887.h: 2662: unsigned BRG13 :1;
[; ;pic16f887.h: 2663: unsigned BRG14 :1;
[; ;pic16f887.h: 2664: unsigned BRG15 :1;
[; ;pic16f887.h: 2665: };
[; ;pic16f887.h: 2666: } SPBRGHbits_t;
[; ;pic16f887.h: 2667: extern volatile SPBRGHbits_t SPBRGHbits @ 0x09A;
[; ;pic16f887.h: 2716: extern volatile unsigned char PWM1CON @ 0x09B;
"2718
[; ;pic16f887.h: 2718: asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
[; ;pic16f887.h: 2721: typedef union {
[; ;pic16f887.h: 2722: struct {
[; ;pic16f887.h: 2723: unsigned PDC :7;
[; ;pic16f887.h: 2724: unsigned PRSEN :1;
[; ;pic16f887.h: 2725: };
[; ;pic16f887.h: 2726: struct {
[; ;pic16f887.h: 2727: unsigned PDC0 :1;
[; ;pic16f887.h: 2728: unsigned PDC1 :1;
[; ;pic16f887.h: 2729: unsigned PDC2 :1;
[; ;pic16f887.h: 2730: unsigned PDC3 :1;
[; ;pic16f887.h: 2731: unsigned PDC4 :1;
[; ;pic16f887.h: 2732: unsigned PDC5 :1;
[; ;pic16f887.h: 2733: unsigned PDC6 :1;
[; ;pic16f887.h: 2734: };
[; ;pic16f887.h: 2735: } PWM1CONbits_t;
[; ;pic16f887.h: 2736: extern volatile PWM1CONbits_t PWM1CONbits @ 0x09B;
[; ;pic16f887.h: 2785: extern volatile unsigned char ECCPAS @ 0x09C;
"2787
[; ;pic16f887.h: 2787: asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
[; ;pic16f887.h: 2790: typedef union {
[; ;pic16f887.h: 2791: struct {
[; ;pic16f887.h: 2792: unsigned PSSBD :2;
[; ;pic16f887.h: 2793: unsigned PSSAC :2;
[; ;pic16f887.h: 2794: unsigned ECCPAS :3;
[; ;pic16f887.h: 2795: unsigned ECCPASE :1;
[; ;pic16f887.h: 2796: };
[; ;pic16f887.h: 2797: struct {
[; ;pic16f887.h: 2798: unsigned PSSBD0 :1;
[; ;pic16f887.h: 2799: unsigned PSSBD1 :1;
[; ;pic16f887.h: 2800: unsigned PSSAC0 :1;
[; ;pic16f887.h: 2801: unsigned PSSAC1 :1;
[; ;pic16f887.h: 2802: unsigned ECCPAS0 :1;
[; ;pic16f887.h: 2803: unsigned ECCPAS1 :1;
[; ;pic16f887.h: 2804: unsigned ECCPAS2 :1;
[; ;pic16f887.h: 2805: };
[; ;pic16f887.h: 2806: } ECCPASbits_t;
[; ;pic16f887.h: 2807: extern volatile ECCPASbits_t ECCPASbits @ 0x09C;
[; ;pic16f887.h: 2866: extern volatile unsigned char PSTRCON @ 0x09D;
"2868
[; ;pic16f887.h: 2868: asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
[; ;pic16f887.h: 2871: typedef union {
[; ;pic16f887.h: 2872: struct {
[; ;pic16f887.h: 2873: unsigned STRA :1;
[; ;pic16f887.h: 2874: unsigned STRB :1;
[; ;pic16f887.h: 2875: unsigned STRC :1;
[; ;pic16f887.h: 2876: unsigned STRD :1;
[; ;pic16f887.h: 2877: unsigned STRSYNC :1;
[; ;pic16f887.h: 2878: };
[; ;pic16f887.h: 2879: } PSTRCONbits_t;
[; ;pic16f887.h: 2880: extern volatile PSTRCONbits_t PSTRCONbits @ 0x09D;
[; ;pic16f887.h: 2909: extern volatile unsigned char ADRESL @ 0x09E;
"2911
[; ;pic16f887.h: 2911: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f887.h: 2915: extern volatile unsigned char ADCON1 @ 0x09F;
"2917
[; ;pic16f887.h: 2917: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f887.h: 2920: typedef union {
[; ;pic16f887.h: 2921: struct {
[; ;pic16f887.h: 2922: unsigned :4;
[; ;pic16f887.h: 2923: unsigned VCFG0 :1;
[; ;pic16f887.h: 2924: unsigned VCFG1 :1;
[; ;pic16f887.h: 2925: unsigned :1;
[; ;pic16f887.h: 2926: unsigned ADFM :1;
[; ;pic16f887.h: 2927: };
[; ;pic16f887.h: 2928: } ADCON1bits_t;
[; ;pic16f887.h: 2929: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f887.h: 2948: extern volatile unsigned char WDTCON @ 0x105;
"2950
[; ;pic16f887.h: 2950: asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
[; ;pic16f887.h: 2953: typedef union {
[; ;pic16f887.h: 2954: struct {
[; ;pic16f887.h: 2955: unsigned SWDTEN :1;
[; ;pic16f887.h: 2956: unsigned WDTPS :4;
[; ;pic16f887.h: 2957: };
[; ;pic16f887.h: 2958: struct {
[; ;pic16f887.h: 2959: unsigned :1;
[; ;pic16f887.h: 2960: unsigned WDTPS0 :1;
[; ;pic16f887.h: 2961: unsigned WDTPS1 :1;
[; ;pic16f887.h: 2962: unsigned WDTPS2 :1;
[; ;pic16f887.h: 2963: unsigned WDTPS3 :1;
[; ;pic16f887.h: 2964: };
[; ;pic16f887.h: 2965: } WDTCONbits_t;
[; ;pic16f887.h: 2966: extern volatile WDTCONbits_t WDTCONbits @ 0x105;
[; ;pic16f887.h: 3000: extern volatile unsigned char CM1CON0 @ 0x107;
"3002
[; ;pic16f887.h: 3002: asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
[; ;pic16f887.h: 3005: typedef union {
[; ;pic16f887.h: 3006: struct {
[; ;pic16f887.h: 3007: unsigned C1CH :2;
[; ;pic16f887.h: 3008: unsigned C1R :1;
[; ;pic16f887.h: 3009: unsigned :1;
[; ;pic16f887.h: 3010: unsigned C1POL :1;
[; ;pic16f887.h: 3011: unsigned C1OE :1;
[; ;pic16f887.h: 3012: unsigned C1OUT :1;
[; ;pic16f887.h: 3013: unsigned C1ON :1;
[; ;pic16f887.h: 3014: };
[; ;pic16f887.h: 3015: struct {
[; ;pic16f887.h: 3016: unsigned C1CH0 :1;
[; ;pic16f887.h: 3017: unsigned C1CH1 :1;
[; ;pic16f887.h: 3018: };
[; ;pic16f887.h: 3019: } CM1CON0bits_t;
[; ;pic16f887.h: 3020: extern volatile CM1CON0bits_t CM1CON0bits @ 0x107;
[; ;pic16f887.h: 3064: extern volatile unsigned char CM2CON0 @ 0x108;
"3066
[; ;pic16f887.h: 3066: asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
[; ;pic16f887.h: 3069: typedef union {
[; ;pic16f887.h: 3070: struct {
[; ;pic16f887.h: 3071: unsigned C2CH :2;
[; ;pic16f887.h: 3072: unsigned C2R :1;
[; ;pic16f887.h: 3073: unsigned :1;
[; ;pic16f887.h: 3074: unsigned C2POL :1;
[; ;pic16f887.h: 3075: unsigned C2OE :1;
[; ;pic16f887.h: 3076: unsigned C2OUT :1;
[; ;pic16f887.h: 3077: unsigned C2ON :1;
[; ;pic16f887.h: 3078: };
[; ;pic16f887.h: 3079: struct {
[; ;pic16f887.h: 3080: unsigned C2CH0 :1;
[; ;pic16f887.h: 3081: unsigned C2CH1 :1;
[; ;pic16f887.h: 3082: };
[; ;pic16f887.h: 3083: } CM2CON0bits_t;
[; ;pic16f887.h: 3084: extern volatile CM2CON0bits_t CM2CON0bits @ 0x108;
[; ;pic16f887.h: 3128: extern volatile unsigned char CM2CON1 @ 0x109;
"3130
[; ;pic16f887.h: 3130: asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
[; ;pic16f887.h: 3133: typedef union {
[; ;pic16f887.h: 3134: struct {
[; ;pic16f887.h: 3135: unsigned C2SYNC :1;
[; ;pic16f887.h: 3136: unsigned T1GSS :1;
[; ;pic16f887.h: 3137: unsigned :2;
[; ;pic16f887.h: 3138: unsigned C2RSEL :1;
[; ;pic16f887.h: 3139: unsigned C1RSEL :1;
[; ;pic16f887.h: 3140: unsigned MC2OUT :1;
[; ;pic16f887.h: 3141: unsigned MC1OUT :1;
[; ;pic16f887.h: 3142: };
[; ;pic16f887.h: 3143: } CM2CON1bits_t;
[; ;pic16f887.h: 3144: extern volatile CM2CON1bits_t CM2CON1bits @ 0x109;
[; ;pic16f887.h: 3178: extern volatile unsigned char EEDATA @ 0x10C;
"3180
[; ;pic16f887.h: 3180: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;pic16f887.h: 3183: extern volatile unsigned char EEDAT @ 0x10C;
"3185
[; ;pic16f887.h: 3185: asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
[; ;pic16f887.h: 3189: extern volatile unsigned char EEADR @ 0x10D;
"3191
[; ;pic16f887.h: 3191: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;pic16f887.h: 3195: extern volatile unsigned char EEDATH @ 0x10E;
"3197
[; ;pic16f887.h: 3197: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;pic16f887.h: 3201: extern volatile unsigned char EEADRH @ 0x10F;
"3203
[; ;pic16f887.h: 3203: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;pic16f887.h: 3207: extern volatile unsigned char SRCON @ 0x185;
"3209
[; ;pic16f887.h: 3209: asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
[; ;pic16f887.h: 3212: typedef union {
[; ;pic16f887.h: 3213: struct {
[; ;pic16f887.h: 3214: unsigned FVREN :1;
[; ;pic16f887.h: 3215: unsigned :1;
[; ;pic16f887.h: 3216: unsigned PULSR :1;
[; ;pic16f887.h: 3217: unsigned PULSS :1;
[; ;pic16f887.h: 3218: unsigned C2REN :1;
[; ;pic16f887.h: 3219: unsigned C1SEN :1;
[; ;pic16f887.h: 3220: unsigned SR0 :1;
[; ;pic16f887.h: 3221: unsigned SR1 :1;
[; ;pic16f887.h: 3222: };
[; ;pic16f887.h: 3223: } SRCONbits_t;
[; ;pic16f887.h: 3224: extern volatile SRCONbits_t SRCONbits @ 0x185;
[; ;pic16f887.h: 3263: extern volatile unsigned char BAUDCTL @ 0x187;
"3265
[; ;pic16f887.h: 3265: asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
[; ;pic16f887.h: 3268: typedef union {
[; ;pic16f887.h: 3269: struct {
[; ;pic16f887.h: 3270: unsigned ABDEN :1;
[; ;pic16f887.h: 3271: unsigned WUE :1;
[; ;pic16f887.h: 3272: unsigned :1;
[; ;pic16f887.h: 3273: unsigned BRG16 :1;
[; ;pic16f887.h: 3274: unsigned SCKP :1;
[; ;pic16f887.h: 3275: unsigned :1;
[; ;pic16f887.h: 3276: unsigned RCIDL :1;
[; ;pic16f887.h: 3277: unsigned ABDOVF :1;
[; ;pic16f887.h: 3278: };
[; ;pic16f887.h: 3279: } BAUDCTLbits_t;
[; ;pic16f887.h: 3280: extern volatile BAUDCTLbits_t BAUDCTLbits @ 0x187;
[; ;pic16f887.h: 3314: extern volatile unsigned char ANSEL @ 0x188;
"3316
[; ;pic16f887.h: 3316: asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
[; ;pic16f887.h: 3319: typedef union {
[; ;pic16f887.h: 3320: struct {
[; ;pic16f887.h: 3321: unsigned ANS0 :1;
[; ;pic16f887.h: 3322: unsigned ANS1 :1;
[; ;pic16f887.h: 3323: unsigned ANS2 :1;
[; ;pic16f887.h: 3324: unsigned ANS3 :1;
[; ;pic16f887.h: 3325: unsigned ANS4 :1;
[; ;pic16f887.h: 3326: unsigned ANS5 :1;
[; ;pic16f887.h: 3327: unsigned ANS6 :1;
[; ;pic16f887.h: 3328: unsigned ANS7 :1;
[; ;pic16f887.h: 3329: };
[; ;pic16f887.h: 3330: } ANSELbits_t;
[; ;pic16f887.h: 3331: extern volatile ANSELbits_t ANSELbits @ 0x188;
[; ;pic16f887.h: 3375: extern volatile unsigned char ANSELH @ 0x189;
"3377
[; ;pic16f887.h: 3377: asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
[; ;pic16f887.h: 3380: typedef union {
[; ;pic16f887.h: 3381: struct {
[; ;pic16f887.h: 3382: unsigned ANS8 :1;
[; ;pic16f887.h: 3383: unsigned ANS9 :1;
[; ;pic16f887.h: 3384: unsigned ANS10 :1;
[; ;pic16f887.h: 3385: unsigned ANS11 :1;
[; ;pic16f887.h: 3386: unsigned ANS12 :1;
[; ;pic16f887.h: 3387: unsigned ANS13 :1;
[; ;pic16f887.h: 3388: };
[; ;pic16f887.h: 3389: } ANSELHbits_t;
[; ;pic16f887.h: 3390: extern volatile ANSELHbits_t ANSELHbits @ 0x189;
[; ;pic16f887.h: 3424: extern volatile unsigned char EECON1 @ 0x18C;
"3426
[; ;pic16f887.h: 3426: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;pic16f887.h: 3429: typedef union {
[; ;pic16f887.h: 3430: struct {
[; ;pic16f887.h: 3431: unsigned RD :1;
[; ;pic16f887.h: 3432: unsigned WR :1;
[; ;pic16f887.h: 3433: unsigned WREN :1;
[; ;pic16f887.h: 3434: unsigned WRERR :1;
[; ;pic16f887.h: 3435: unsigned :3;
[; ;pic16f887.h: 3436: unsigned EEPGD :1;
[; ;pic16f887.h: 3437: };
[; ;pic16f887.h: 3438: } EECON1bits_t;
[; ;pic16f887.h: 3439: extern volatile EECON1bits_t EECON1bits @ 0x18C;
[; ;pic16f887.h: 3468: extern volatile unsigned char EECON2 @ 0x18D;
"3470
[; ;pic16f887.h: 3470: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;pic16f887.h: 3480: extern volatile __bit ABDEN @ (((unsigned) &BAUDCTL)*8) + 0;
[; ;pic16f887.h: 3482: extern volatile __bit ABDOVF @ (((unsigned) &BAUDCTL)*8) + 7;
[; ;pic16f887.h: 3484: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f887.h: 3486: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f887.h: 3488: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f887.h: 3490: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f887.h: 3492: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f887.h: 3494: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f887.h: 3496: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f887.h: 3498: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f887.h: 3500: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f887.h: 3502: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f887.h: 3504: extern volatile __bit ANS0 @ (((unsigned) &ANSEL)*8) + 0;
[; ;pic16f887.h: 3506: extern volatile __bit ANS1 @ (((unsigned) &ANSEL)*8) + 1;
[; ;pic16f887.h: 3508: extern volatile __bit ANS10 @ (((unsigned) &ANSELH)*8) + 2;
[; ;pic16f887.h: 3510: extern volatile __bit ANS11 @ (((unsigned) &ANSELH)*8) + 3;
[; ;pic16f887.h: 3512: extern volatile __bit ANS12 @ (((unsigned) &ANSELH)*8) + 4;
[; ;pic16f887.h: 3514: extern volatile __bit ANS13 @ (((unsigned) &ANSELH)*8) + 5;
[; ;pic16f887.h: 3516: extern volatile __bit ANS2 @ (((unsigned) &ANSEL)*8) + 2;
[; ;pic16f887.h: 3518: extern volatile __bit ANS3 @ (((unsigned) &ANSEL)*8) + 3;
[; ;pic16f887.h: 3520: extern volatile __bit ANS4 @ (((unsigned) &ANSEL)*8) + 4;
[; ;pic16f887.h: 3522: extern volatile __bit ANS5 @ (((unsigned) &ANSEL)*8) + 5;
[; ;pic16f887.h: 3524: extern volatile __bit ANS6 @ (((unsigned) &ANSEL)*8) + 6;
[; ;pic16f887.h: 3526: extern volatile __bit ANS7 @ (((unsigned) &ANSEL)*8) + 7;
[; ;pic16f887.h: 3528: extern volatile __bit ANS8 @ (((unsigned) &ANSELH)*8) + 0;
[; ;pic16f887.h: 3530: extern volatile __bit ANS9 @ (((unsigned) &ANSELH)*8) + 1;
[; ;pic16f887.h: 3532: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f887.h: 3534: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f887.h: 3536: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f887.h: 3538: extern volatile __bit BRG0 @ (((unsigned) &SPBRG)*8) + 0;
[; ;pic16f887.h: 3540: extern volatile __bit BRG1 @ (((unsigned) &SPBRG)*8) + 1;
[; ;pic16f887.h: 3542: extern volatile __bit BRG10 @ (((unsigned) &SPBRGH)*8) + 2;
[; ;pic16f887.h: 3544: extern volatile __bit BRG11 @ (((unsigned) &SPBRGH)*8) + 3;
[; ;pic16f887.h: 3546: extern volatile __bit BRG12 @ (((unsigned) &SPBRGH)*8) + 4;
[; ;pic16f887.h: 3548: extern volatile __bit BRG13 @ (((unsigned) &SPBRGH)*8) + 5;
[; ;pic16f887.h: 3550: extern volatile __bit BRG14 @ (((unsigned) &SPBRGH)*8) + 6;
[; ;pic16f887.h: 3552: extern volatile __bit BRG15 @ (((unsigned) &SPBRGH)*8) + 7;
[; ;pic16f887.h: 3554: extern volatile __bit BRG16 @ (((unsigned) &BAUDCTL)*8) + 3;
[; ;pic16f887.h: 3556: extern volatile __bit BRG2 @ (((unsigned) &SPBRG)*8) + 2;
[; ;pic16f887.h: 3558: extern volatile __bit BRG3 @ (((unsigned) &SPBRG)*8) + 3;
[; ;pic16f887.h: 3560: extern volatile __bit BRG4 @ (((unsigned) &SPBRG)*8) + 4;
[; ;pic16f887.h: 3562: extern volatile __bit BRG5 @ (((unsigned) &SPBRG)*8) + 5;
[; ;pic16f887.h: 3564: extern volatile __bit BRG6 @ (((unsigned) &SPBRG)*8) + 6;
[; ;pic16f887.h: 3566: extern volatile __bit BRG7 @ (((unsigned) &SPBRG)*8) + 7;
[; ;pic16f887.h: 3568: extern volatile __bit BRG8 @ (((unsigned) &SPBRGH)*8) + 0;
[; ;pic16f887.h: 3570: extern volatile __bit BRG9 @ (((unsigned) &SPBRGH)*8) + 1;
[; ;pic16f887.h: 3572: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f887.h: 3574: extern volatile __bit C1CH0 @ (((unsigned) &CM1CON0)*8) + 0;
[; ;pic16f887.h: 3576: extern volatile __bit C1CH1 @ (((unsigned) &CM1CON0)*8) + 1;
[; ;pic16f887.h: 3578: extern volatile __bit C1IE @ (((unsigned) &PIE2)*8) + 5;
[; ;pic16f887.h: 3580: extern volatile __bit C1IF @ (((unsigned) &PIR2)*8) + 5;
[; ;pic16f887.h: 3582: extern volatile __bit C1OE @ (((unsigned) &CM1CON0)*8) + 5;
[; ;pic16f887.h: 3584: extern volatile __bit C1ON @ (((unsigned) &CM1CON0)*8) + 7;
[; ;pic16f887.h: 3586: extern volatile __bit C1OUT @ (((unsigned) &CM1CON0)*8) + 6;
[; ;pic16f887.h: 3588: extern volatile __bit C1POL @ (((unsigned) &CM1CON0)*8) + 4;
[; ;pic16f887.h: 3590: extern volatile __bit C1R @ (((unsigned) &CM1CON0)*8) + 2;
[; ;pic16f887.h: 3592: extern volatile __bit C1RSEL @ (((unsigned) &CM2CON1)*8) + 5;
[; ;pic16f887.h: 3594: extern volatile __bit C1SEN @ (((unsigned) &SRCON)*8) + 5;
[; ;pic16f887.h: 3596: extern volatile __bit C2CH0 @ (((unsigned) &CM2CON0)*8) + 0;
[; ;pic16f887.h: 3598: extern volatile __bit C2CH1 @ (((unsigned) &CM2CON0)*8) + 1;
[; ;pic16f887.h: 3600: extern volatile __bit C2IE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f887.h: 3602: extern volatile __bit C2IF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f887.h: 3604: extern volatile __bit C2OE @ (((unsigned) &CM2CON0)*8) + 5;
[; ;pic16f887.h: 3606: extern volatile __bit C2ON @ (((unsigned) &CM2CON0)*8) + 7;
[; ;pic16f887.h: 3608: extern volatile __bit C2OUT @ (((unsigned) &CM2CON0)*8) + 6;
[; ;pic16f887.h: 3610: extern volatile __bit C2POL @ (((unsigned) &CM2CON0)*8) + 4;
[; ;pic16f887.h: 3612: extern volatile __bit C2R @ (((unsigned) &CM2CON0)*8) + 2;
[; ;pic16f887.h: 3614: extern volatile __bit C2REN @ (((unsigned) &SRCON)*8) + 4;
[; ;pic16f887.h: 3616: extern volatile __bit C2RSEL @ (((unsigned) &CM2CON1)*8) + 4;
[; ;pic16f887.h: 3618: extern volatile __bit C2SYNC @ (((unsigned) &CM2CON1)*8) + 0;
[; ;pic16f887.h: 3620: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f887.h: 3622: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f887.h: 3624: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f887.h: 3626: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f887.h: 3628: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f887.h: 3630: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f887.h: 3632: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f887.h: 3634: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f887.h: 3636: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f887.h: 3638: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f887.h: 3640: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f887.h: 3642: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f887.h: 3644: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f887.h: 3646: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f887.h: 3648: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f887.h: 3650: extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f887.h: 3652: extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f887.h: 3654: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f887.h: 3656: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f887.h: 3658: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f887.h: 3660: extern volatile __bit CHS3 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f887.h: 3662: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f887.h: 3664: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f887.h: 3666: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f887.h: 3668: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f887.h: 3670: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3672: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f887.h: 3674: extern volatile __bit DC1B0 @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f887.h: 3676: extern volatile __bit DC1B1 @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f887.h: 3678: extern volatile __bit DC2B0 @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f887.h: 3680: extern volatile __bit DC2B1 @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f887.h: 3682: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3684: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3686: extern volatile __bit ECCPAS0 @ (((unsigned) &ECCPAS)*8) + 4;
[; ;pic16f887.h: 3688: extern volatile __bit ECCPAS1 @ (((unsigned) &ECCPAS)*8) + 5;
[; ;pic16f887.h: 3690: extern volatile __bit ECCPAS2 @ (((unsigned) &ECCPAS)*8) + 6;
[; ;pic16f887.h: 3692: extern volatile __bit ECCPASE @ (((unsigned) &ECCPAS)*8) + 7;
[; ;pic16f887.h: 3694: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f887.h: 3696: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f887.h: 3698: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f887.h: 3700: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f887.h: 3702: extern volatile __bit FVREN @ (((unsigned) &SRCON)*8) + 0;
[; ;pic16f887.h: 3704: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f887.h: 3706: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f887.h: 3708: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 3710: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 3712: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 3714: extern volatile __bit HTS @ (((unsigned) &OSCCON)*8) + 2;
[; ;pic16f887.h: 3716: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3718: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 3720: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f887.h: 3722: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f887.h: 3724: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f887.h: 3726: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f887.h: 3728: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f887.h: 3730: extern volatile __bit IOCB0 @ (((unsigned) &IOCB)*8) + 0;
[; ;pic16f887.h: 3732: extern volatile __bit IOCB1 @ (((unsigned) &IOCB)*8) + 1;
[; ;pic16f887.h: 3734: extern volatile __bit IOCB2 @ (((unsigned) &IOCB)*8) + 2;
[; ;pic16f887.h: 3736: extern volatile __bit IOCB3 @ (((unsigned) &IOCB)*8) + 3;
[; ;pic16f887.h: 3738: extern volatile __bit IOCB4 @ (((unsigned) &IOCB)*8) + 4;
[; ;pic16f887.h: 3740: extern volatile __bit IOCB5 @ (((unsigned) &IOCB)*8) + 5;
[; ;pic16f887.h: 3742: extern volatile __bit IOCB6 @ (((unsigned) &IOCB)*8) + 6;
[; ;pic16f887.h: 3744: extern volatile __bit IOCB7 @ (((unsigned) &IOCB)*8) + 7;
[; ;pic16f887.h: 3746: extern volatile __bit IRCF0 @ (((unsigned) &OSCCON)*8) + 4;
[; ;pic16f887.h: 3748: extern volatile __bit IRCF1 @ (((unsigned) &OSCCON)*8) + 5;
[; ;pic16f887.h: 3750: extern volatile __bit IRCF2 @ (((unsigned) &OSCCON)*8) + 6;
[; ;pic16f887.h: 3752: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f887.h: 3754: extern volatile __bit LTS @ (((unsigned) &OSCCON)*8) + 1;
[; ;pic16f887.h: 3756: extern volatile __bit MC1OUT @ (((unsigned) &CM2CON1)*8) + 7;
[; ;pic16f887.h: 3758: extern volatile __bit MC2OUT @ (((unsigned) &CM2CON1)*8) + 6;
[; ;pic16f887.h: 3760: extern volatile __bit MSK0 @ (((unsigned) &SSPMSK)*8) + 0;
[; ;pic16f887.h: 3762: extern volatile __bit MSK1 @ (((unsigned) &SSPMSK)*8) + 1;
[; ;pic16f887.h: 3764: extern volatile __bit MSK2 @ (((unsigned) &SSPMSK)*8) + 2;
[; ;pic16f887.h: 3766: extern volatile __bit MSK3 @ (((unsigned) &SSPMSK)*8) + 3;
[; ;pic16f887.h: 3768: extern volatile __bit MSK4 @ (((unsigned) &SSPMSK)*8) + 4;
[; ;pic16f887.h: 3770: extern volatile __bit MSK5 @ (((unsigned) &SSPMSK)*8) + 5;
[; ;pic16f887.h: 3772: extern volatile __bit MSK6 @ (((unsigned) &SSPMSK)*8) + 6;
[; ;pic16f887.h: 3774: extern volatile __bit MSK7 @ (((unsigned) &SSPMSK)*8) + 7;
[; ;pic16f887.h: 3776: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f887.h: 3778: extern volatile __bit OSFIE @ (((unsigned) &PIE2)*8) + 7;
[; ;pic16f887.h: 3780: extern volatile __bit OSFIF @ (((unsigned) &PIR2)*8) + 7;
[; ;pic16f887.h: 3782: extern volatile __bit OSTS @ (((unsigned) &OSCCON)*8) + 3;
[; ;pic16f887.h: 3784: extern volatile __bit P1M0 @ (((unsigned) &CCP1CON)*8) + 6;
[; ;pic16f887.h: 3786: extern volatile __bit P1M1 @ (((unsigned) &CCP1CON)*8) + 7;
[; ;pic16f887.h: 3788: extern volatile __bit PDC0 @ (((unsigned) &PWM1CON)*8) + 0;
[; ;pic16f887.h: 3790: extern volatile __bit PDC1 @ (((unsigned) &PWM1CON)*8) + 1;
[; ;pic16f887.h: 3792: extern volatile __bit PDC2 @ (((unsigned) &PWM1CON)*8) + 2;
[; ;pic16f887.h: 3794: extern volatile __bit PDC3 @ (((unsigned) &PWM1CON)*8) + 3;
[; ;pic16f887.h: 3796: extern volatile __bit PDC4 @ (((unsigned) &PWM1CON)*8) + 4;
[; ;pic16f887.h: 3798: extern volatile __bit PDC5 @ (((unsigned) &PWM1CON)*8) + 5;
[; ;pic16f887.h: 3800: extern volatile __bit PDC6 @ (((unsigned) &PWM1CON)*8) + 6;
[; ;pic16f887.h: 3802: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f887.h: 3804: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f887.h: 3806: extern volatile __bit PRSEN @ (((unsigned) &PWM1CON)*8) + 7;
[; ;pic16f887.h: 3808: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f887.h: 3810: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f887.h: 3812: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f887.h: 3814: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f887.h: 3816: extern volatile __bit PSSAC0 @ (((unsigned) &ECCPAS)*8) + 2;
[; ;pic16f887.h: 3818: extern volatile __bit PSSAC1 @ (((unsigned) &ECCPAS)*8) + 3;
[; ;pic16f887.h: 3820: extern volatile __bit PSSBD0 @ (((unsigned) &ECCPAS)*8) + 0;
[; ;pic16f887.h: 3822: extern volatile __bit PSSBD1 @ (((unsigned) &ECCPAS)*8) + 1;
[; ;pic16f887.h: 3824: extern volatile __bit PULSR @ (((unsigned) &SRCON)*8) + 2;
[; ;pic16f887.h: 3826: extern volatile __bit PULSS @ (((unsigned) &SRCON)*8) + 3;
[; ;pic16f887.h: 3828: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f887.h: 3830: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f887.h: 3832: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f887.h: 3834: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f887.h: 3836: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f887.h: 3838: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f887.h: 3840: extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;
[; ;pic16f887.h: 3842: extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;
[; ;pic16f887.h: 3844: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f887.h: 3846: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f887.h: 3848: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f887.h: 3850: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f887.h: 3852: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f887.h: 3854: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f887.h: 3856: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f887.h: 3858: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f887.h: 3860: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f887.h: 3862: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f887.h: 3864: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f887.h: 3866: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f887.h: 3868: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f887.h: 3870: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f887.h: 3872: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f887.h: 3874: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f887.h: 3876: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f887.h: 3878: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f887.h: 3880: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 3882: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 3884: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f887.h: 3886: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f887.h: 3888: extern volatile __bit RCIDL @ (((unsigned) &BAUDCTL)*8) + 6;
[; ;pic16f887.h: 3890: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f887.h: 3892: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f887.h: 3894: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f887.h: 3896: extern volatile __bit RD0 @ (((unsigned) &PORTD)*8) + 0;
[; ;pic16f887.h: 3898: extern volatile __bit RD1 @ (((unsigned) &PORTD)*8) + 1;
[; ;pic16f887.h: 3900: extern volatile __bit RD2 @ (((unsigned) &PORTD)*8) + 2;
[; ;pic16f887.h: 3902: extern volatile __bit RD3 @ (((unsigned) &PORTD)*8) + 3;
[; ;pic16f887.h: 3904: extern volatile __bit RD4 @ (((unsigned) &PORTD)*8) + 4;
[; ;pic16f887.h: 3906: extern volatile __bit RD5 @ (((unsigned) &PORTD)*8) + 5;
[; ;pic16f887.h: 3908: extern volatile __bit RD6 @ (((unsigned) &PORTD)*8) + 6;
[; ;pic16f887.h: 3910: extern volatile __bit RD7 @ (((unsigned) &PORTD)*8) + 7;
[; ;pic16f887.h: 3912: extern volatile __bit RE0 @ (((unsigned) &PORTE)*8) + 0;
[; ;pic16f887.h: 3914: extern volatile __bit RE1 @ (((unsigned) &PORTE)*8) + 1;
[; ;pic16f887.h: 3916: extern volatile __bit RE2 @ (((unsigned) &PORTE)*8) + 2;
[; ;pic16f887.h: 3918: extern volatile __bit RE3 @ (((unsigned) &PORTE)*8) + 3;
[; ;pic16f887.h: 3920: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 3922: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f887.h: 3924: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f887.h: 3926: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f887.h: 3928: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 3930: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f887.h: 3932: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 3934: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 3936: extern volatile __bit SBOREN @ (((unsigned) &PCON)*8) + 4;
[; ;pic16f887.h: 3938: extern volatile __bit SCKP @ (((unsigned) &BAUDCTL)*8) + 4;
[; ;pic16f887.h: 3940: extern volatile __bit SCS @ (((unsigned) &OSCCON)*8) + 0;
[; ;pic16f887.h: 3942: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f887.h: 3944: extern volatile __bit SENDB @ (((unsigned) &TXSTA)*8) + 3;
[; ;pic16f887.h: 3946: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f887.h: 3948: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f887.h: 3950: extern volatile __bit SR0 @ (((unsigned) &SRCON)*8) + 6;
[; ;pic16f887.h: 3952: extern volatile __bit SR1 @ (((unsigned) &SRCON)*8) + 7;
[; ;pic16f887.h: 3954: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f887.h: 3956: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f887.h: 3958: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f887.h: 3960: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f887.h: 3962: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f887.h: 3964: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f887.h: 3966: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f887.h: 3968: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f887.h: 3970: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f887.h: 3972: extern volatile __bit STRA @ (((unsigned) &PSTRCON)*8) + 0;
[; ;pic16f887.h: 3974: extern volatile __bit STRB @ (((unsigned) &PSTRCON)*8) + 1;
[; ;pic16f887.h: 3976: extern volatile __bit STRC @ (((unsigned) &PSTRCON)*8) + 2;
[; ;pic16f887.h: 3978: extern volatile __bit STRD @ (((unsigned) &PSTRCON)*8) + 3;
[; ;pic16f887.h: 3980: extern volatile __bit STRSYNC @ (((unsigned) &PSTRCON)*8) + 4;
[; ;pic16f887.h: 3982: extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;
[; ;pic16f887.h: 3984: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f887.h: 3986: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f887.h: 3988: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f887.h: 3990: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f887.h: 3992: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f887.h: 3994: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f887.h: 3996: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f887.h: 3998: extern volatile __bit T1GINV @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f887.h: 4000: extern volatile __bit T1GIV @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f887.h: 4002: extern volatile __bit T1GSS @ (((unsigned) &CM2CON1)*8) + 1;
[; ;pic16f887.h: 4004: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f887.h: 4006: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f887.h: 4008: extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f887.h: 4010: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f887.h: 4012: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f887.h: 4014: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f887.h: 4016: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f887.h: 4018: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f887.h: 4020: extern volatile __bit TMR1GE @ (((unsigned) &T1CON)*8) + 6;
[; ;pic16f887.h: 4022: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f887.h: 4024: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f887.h: 4026: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f887.h: 4028: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f887.h: 4030: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f887.h: 4032: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f887.h: 4034: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f887.h: 4036: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f887.h: 4038: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f887.h: 4040: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f887.h: 4042: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f887.h: 4044: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f887.h: 4046: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f887.h: 4048: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f887.h: 4050: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f887.h: 4052: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f887.h: 4054: extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;
[; ;pic16f887.h: 4056: extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;
[; ;pic16f887.h: 4058: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f887.h: 4060: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f887.h: 4062: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f887.h: 4064: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f887.h: 4066: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f887.h: 4068: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f887.h: 4070: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f887.h: 4072: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f887.h: 4074: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f887.h: 4076: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f887.h: 4078: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f887.h: 4080: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f887.h: 4082: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f887.h: 4084: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f887.h: 4086: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f887.h: 4088: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f887.h: 4090: extern volatile __bit TRISD0 @ (((unsigned) &TRISD)*8) + 0;
[; ;pic16f887.h: 4092: extern volatile __bit TRISD1 @ (((unsigned) &TRISD)*8) + 1;
[; ;pic16f887.h: 4094: extern volatile __bit TRISD2 @ (((unsigned) &TRISD)*8) + 2;
[; ;pic16f887.h: 4096: extern volatile __bit TRISD3 @ (((unsigned) &TRISD)*8) + 3;
[; ;pic16f887.h: 4098: extern volatile __bit TRISD4 @ (((unsigned) &TRISD)*8) + 4;
[; ;pic16f887.h: 4100: extern volatile __bit TRISD5 @ (((unsigned) &TRISD)*8) + 5;
[; ;pic16f887.h: 4102: extern volatile __bit TRISD6 @ (((unsigned) &TRISD)*8) + 6;
[; ;pic16f887.h: 4104: extern volatile __bit TRISD7 @ (((unsigned) &TRISD)*8) + 7;
[; ;pic16f887.h: 4106: extern volatile __bit TRISE0 @ (((unsigned) &TRISE)*8) + 0;
[; ;pic16f887.h: 4108: extern volatile __bit TRISE1 @ (((unsigned) &TRISE)*8) + 1;
[; ;pic16f887.h: 4110: extern volatile __bit TRISE2 @ (((unsigned) &TRISE)*8) + 2;
[; ;pic16f887.h: 4112: extern volatile __bit TRISE3 @ (((unsigned) &TRISE)*8) + 3;
[; ;pic16f887.h: 4114: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f887.h: 4116: extern volatile __bit TUN0 @ (((unsigned) &OSCTUNE)*8) + 0;
[; ;pic16f887.h: 4118: extern volatile __bit TUN1 @ (((unsigned) &OSCTUNE)*8) + 1;
[; ;pic16f887.h: 4120: extern volatile __bit TUN2 @ (((unsigned) &OSCTUNE)*8) + 2;
[; ;pic16f887.h: 4122: extern volatile __bit TUN3 @ (((unsigned) &OSCTUNE)*8) + 3;
[; ;pic16f887.h: 4124: extern volatile __bit TUN4 @ (((unsigned) &OSCTUNE)*8) + 4;
[; ;pic16f887.h: 4126: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f887.h: 4128: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f887.h: 4130: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f887.h: 4132: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f887.h: 4134: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f887.h: 4136: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f887.h: 4138: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f887.h: 4140: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f887.h: 4142: extern volatile __bit ULPWUE @ (((unsigned) &PCON)*8) + 5;
[; ;pic16f887.h: 4144: extern volatile __bit ULPWUIE @ (((unsigned) &PIE2)*8) + 2;
[; ;pic16f887.h: 4146: extern volatile __bit ULPWUIF @ (((unsigned) &PIR2)*8) + 2;
[; ;pic16f887.h: 4148: extern volatile __bit VCFG0 @ (((unsigned) &ADCON1)*8) + 4;
[; ;pic16f887.h: 4150: extern volatile __bit VCFG1 @ (((unsigned) &ADCON1)*8) + 5;
[; ;pic16f887.h: 4152: extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;
[; ;pic16f887.h: 4154: extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;
[; ;pic16f887.h: 4156: extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;
[; ;pic16f887.h: 4158: extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;
[; ;pic16f887.h: 4160: extern volatile __bit VREN @ (((unsigned) &VRCON)*8) + 7;
[; ;pic16f887.h: 4162: extern volatile __bit VROE @ (((unsigned) &VRCON)*8) + 6;
[; ;pic16f887.h: 4164: extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;
[; ;pic16f887.h: 4166: extern volatile __bit VRSS @ (((unsigned) &VRCON)*8) + 4;
[; ;pic16f887.h: 4168: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f887.h: 4170: extern volatile __bit WDTPS0 @ (((unsigned) &WDTCON)*8) + 1;
[; ;pic16f887.h: 4172: extern volatile __bit WDTPS1 @ (((unsigned) &WDTCON)*8) + 2;
[; ;pic16f887.h: 4174: extern volatile __bit WDTPS2 @ (((unsigned) &WDTCON)*8) + 3;
[; ;pic16f887.h: 4176: extern volatile __bit WDTPS3 @ (((unsigned) &WDTCON)*8) + 4;
[; ;pic16f887.h: 4178: extern volatile __bit WPUB0 @ (((unsigned) &WPUB)*8) + 0;
[; ;pic16f887.h: 4180: extern volatile __bit WPUB1 @ (((unsigned) &WPUB)*8) + 1;
[; ;pic16f887.h: 4182: extern volatile __bit WPUB2 @ (((unsigned) &WPUB)*8) + 2;
[; ;pic16f887.h: 4184: extern volatile __bit WPUB3 @ (((unsigned) &WPUB)*8) + 3;
[; ;pic16f887.h: 4186: extern volatile __bit WPUB4 @ (((unsigned) &WPUB)*8) + 4;
[; ;pic16f887.h: 4188: extern volatile __bit WPUB5 @ (((unsigned) &WPUB)*8) + 5;
[; ;pic16f887.h: 4190: extern volatile __bit WPUB6 @ (((unsigned) &WPUB)*8) + 6;
[; ;pic16f887.h: 4192: extern volatile __bit WPUB7 @ (((unsigned) &WPUB)*8) + 7;
[; ;pic16f887.h: 4194: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f887.h: 4196: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f887.h: 4198: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f887.h: 4200: extern volatile __bit WUE @ (((unsigned) &BAUDCTL)*8) + 1;
[; ;pic16f887.h: 4202: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f887.h: 4204: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 4206: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 4208: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f887.h: 4210: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f887.h: 4212: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 4214: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f887.h: 4216: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f887.h: 4218: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f887.h: 4220: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 4222: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f887.h: 4224: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f887.h: 4226: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f887.h: 4228: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 4230: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 76: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 41: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 42: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 43: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 44: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 150: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 184: extern unsigned char __resetbits;
[; ;pic.h: 185: extern __bit __powerdown;
[; ;pic.h: 186: extern __bit __timeout;
[; ;lcd.h: 8: extern void lcd_write(unsigned char);
[; ;lcd.h: 12: extern void lcd_clear(void);
[; ;lcd.h: 16: extern void lcd_puts(const char * s);
[; ;lcd.h: 20: extern void lcd_goto(unsigned char pos);
[; ;lcd.h: 24: extern void lcd_init(void);
[; ;lcd.h: 26: extern void lcd_putch(char);
[; ;lcd.h: 28: extern int change_baudlate(int rate_num);
[; ;lcd.h: 35: extern void lcd_cmd(char cmd);
[; ;lcd.h: 37: extern void lcd_putint(char *buf, int val, int base, int str_length, char space_f);
"8 eeprom.h
[v _intsep `S139 ~T0 @X0 1 e ]
[; ;eeprom.h: 4: union intsep
[; ;eeprom.h: 5: {
[; ;eeprom.h: 6: int twobyte;
[; ;eeprom.h: 7: char byte[2];
[; ;eeprom.h: 8: }intsep;
[; ;eeprom.h: 10: extern int eeprom_write_char(char address, char data);
[; ;eeprom.h: 11: extern char eeprom_read_char(char address);
[; ;eeprom.h: 12: extern char eeprom_verify(char address, char data);
[; ;eeprom.h: 13: extern void eeprom_init(char con1, char con2);
[; ;eeprom.h: 14: extern int eeprom_write_int(char address, int data);
[; ;eeprom.h: 15: extern int eeprom_read_int(char address);
"32 main.c
[p x FOSC=INTRC_NOCLKOUT ]
"33
[p x WDTE=OFF ]
"34
[p x PWRTE=ON ]
"35
[p x MCLRE=OFF ]
"36
[p x CP=OFF ]
"37
[p x CPD=OFF ]
"38
[p x BOREN=ON ]
"39
[p x IESO=OFF ]
"40
[p x FCMEN=OFF ]
"41
[p x LVP=OFF ]
"44
[p x BOR4V=BOR40V ]
"45
[p x WRT=OFF ]
[; ;main.c: 47: void ModeSelect(void);
[; ;main.c: 48: void SetCheckRow(void);
[; ;main.c: 49: void SetNumberOfTimes(void);
[; ;main.c: 50: void Confirm(void);
[; ;main.c: 51: void CheckDo(void);
[; ;main.c: 52: void DebugMode(void);
[; ;main.c: 53: void ShowResult(void);
[; ;main.c: 54: int ButtonPush(void);
[; ;main.c: 55: void IndicadeSettingMode(int modenum);
[; ;main.c: 56: void IndicateSelectedMode(char start);
[; ;main.c: 57: void Setting(void);
[; ;main.c: 58: void SetIntervalTime(void);
"60
[v _state `i ~T0 @X0 1 e ]
[i _state
-> 0 `i
]
[; ;main.c: 60: int state = 0;
"61
[v _mode `i ~T0 @X0 1 e ]
[i _mode
-> 0 `i
]
[; ;main.c: 61: int mode = 0;
"62
[v _checkrow `i ~T0 @X0 -> 8 `i e ]
[i _checkrow
:U ..
-> 1 `i
-> 2 `i
-> 3 `i
-> 4 `i
-> 5 `i
-> 6 `i
-> 7 `i
-> 8 `i
..
]
[; ;main.c: 62: int checkrow[8] = {1,2,3,4,5,6,7,8};
"63
[v _times `i ~T0 @X0 1 e ]
[i _times
-> 5 `i
]
[; ;main.c: 63: int times = 5;
"64
[v _interval_time_ms `i ~T0 @X0 1 e ]
[i _interval_time_ms
-> 20 `i
]
[; ;main.c: 64: int interval_time_ms = 20;
"65
[v _ok_num `i ~T0 @X0 1 e ]
[; ;main.c: 65: int ok_num;
"66
[v _ng_num `i ~T0 @X0 1 e ]
[; ;main.c: 66: int ng_num;
"68
[v _main `(v ~T0 @X0 1 ef ]
"69
{
[; ;main.c: 68: void main(void)
[; ;main.c: 69: {
[e :U _main ]
[f ]
[; ;main.c: 71: OSCCON = 0b01110001;
"71
[e = _OSCCON -> -> 113 `i `uc ]
[; ;main.c: 72: ANSEL = 0x00;
"72
[e = _ANSEL -> -> 0 `i `uc ]
[; ;main.c: 73: INTCON = 0x00;
"73
[e = _INTCON -> -> 0 `i `uc ]
[; ;main.c: 74: CCP1CON = 0x00;
"74
[e = _CCP1CON -> -> 0 `i `uc ]
[; ;main.c: 75: CCP2CON = 0x00;
"75
[e = _CCP2CON -> -> 0 `i `uc ]
[; ;main.c: 76: CM1CON0 = 0x00;
"76
[e = _CM1CON0 -> -> 0 `i `uc ]
[; ;main.c: 77: CM2CON0 = 0x00;
"77
[e = _CM2CON0 -> -> 0 `i `uc ]
[; ;main.c: 79: TRISA = 0x00;
"79
[e = _TRISA -> -> 0 `i `uc ]
[; ;main.c: 80: TRISB = 0x00;
"80
[e = _TRISB -> -> 0 `i `uc ]
[; ;main.c: 81: TRISC = 0x07;
"81
[e = _TRISC -> -> 7 `i `uc ]
[; ;main.c: 82: TRISD = 0xFF;
"82
[e = _TRISD -> -> 255 `i `uc ]
[; ;main.c: 83: TRISE = 0x00;
"83
[e = _TRISE -> -> 0 `i `uc ]
[; ;main.c: 85: PORTA = 0x00;
"85
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 86: PORTB = 0x00;
"86
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 87: PORTC = 0x00;
"87
[e = _PORTC -> -> 0 `i `uc ]
[; ;main.c: 88: PORTD = 0x00;
"88
[e = _PORTD -> -> 0 `i `uc ]
[; ;main.c: 89: PORTE = 0x00;
"89
[e = _PORTE -> -> 0 `i `uc ]
[; ;main.c: 91: lcd_init();
"91
[e ( _lcd_init ..  ]
[; ;main.c: 92: lcd_goto(0x00);
"92
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;main.c: 93: lcd_puts("LanCable Checker");
"93
[e ( _lcd_puts (1 :s 1C ]
[; ;main.c: 94: lcd_goto(0x40);
"94
[e ( _lcd_goto (1 -> -> 64 `i `uc ]
[; ;main.c: 95: lcd_puts("PSE PUSH ANY BTN");
"95
[e ( _lcd_puts (1 :s 2C ]
[; ;main.c: 96: ButtonPush();
"96
[e ( _ButtonPush ..  ]
[; ;main.c: 98: eeprom_init(0,1);
"98
[e ( _eeprom_init (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 99: times = eeprom_read_int(0x00);
"99
[e = _times ( _eeprom_read_int (1 -> -> 0 `i `uc ]
[; ;main.c: 100: interval_time_ms = eeprom_read_int(0x02);
"100
[e = _interval_time_ms ( _eeprom_read_int (1 -> -> 2 `i `uc ]
[; ;main.c: 102: while(1)
"102
[e :U 142 ]
[; ;main.c: 103: {
"103
{
[; ;main.c: 104: switch(state)
"104
[e $U 145  ]
[; ;main.c: 105: {
"105
{
[; ;main.c: 106: case 0 : ModeSelect();
"106
[e :U 146 ]
[e ( _ModeSelect ..  ]
[; ;main.c: 107: break;
"107
[e $U 144  ]
[; ;main.c: 108: case 1 : SetCheckRow();
"108
[e :U 147 ]
[e ( _SetCheckRow ..  ]
[; ;main.c: 109: break;
"109
[e $U 144  ]
[; ;main.c: 110: case 2 : SetNumberOfTimes();
"110
[e :U 148 ]
[e ( _SetNumberOfTimes ..  ]
[; ;main.c: 111: break;
"111
[e $U 144  ]
[; ;main.c: 112: case 3 : Confirm();
"112
[e :U 149 ]
[e ( _Confirm ..  ]
[; ;main.c: 113: break;
"113
[e $U 144  ]
[; ;main.c: 114: case 4 : CheckDo();
"114
[e :U 150 ]
[e ( _CheckDo ..  ]
[; ;main.c: 115: break;
"115
[e $U 144  ]
[; ;main.c: 116: case 5 : DebugMode();
"116
[e :U 151 ]
[e ( _DebugMode ..  ]
[; ;main.c: 117: break;
"117
[e $U 144  ]
[; ;main.c: 118: case 6 : ShowResult();
"118
[e :U 152 ]
[e ( _ShowResult ..  ]
[; ;main.c: 119: break;
"119
[e $U 144  ]
[; ;main.c: 120: case 7 : Setting();
"120
[e :U 153 ]
[e ( _Setting ..  ]
[; ;main.c: 121: break;
"121
[e $U 144  ]
[; ;main.c: 122: default : ModeSelect();
"122
[e :U 154 ]
[e ( _ModeSelect ..  ]
"123
}
[; ;main.c: 123: }
[e $U 144  ]
"104
[e :U 145 ]
[e [\ _state , $ -> 0 `i 146
 , $ -> 1 `i 147
 , $ -> 2 `i 148
 , $ -> 3 `i 149
 , $ -> 4 `i 150
 , $ -> 5 `i 151
 , $ -> 6 `i 152
 , $ -> 7 `i 153
 154 ]
"123
[e :U 144 ]
"124
}
[e :U 141 ]
"102
[e $U 142  ]
[e :U 143 ]
[; ;main.c: 124: }
[; ;main.c: 125: }
"125
[e :UE 140 ]
}
"127
[v _ModeSelect `(v ~T0 @X0 1 ef ]
"128
{
[; ;main.c: 127: void ModeSelect(void)
[; ;main.c: 128: {
[e :U _ModeSelect ]
[f ]
"129
[v _button `i ~T0 @X0 1 a ]
[; ;main.c: 129: int button = 0;
[e = _button -> 0 `i ]
[; ;main.c: 131: lcd_clear();
"131
[e ( _lcd_clear ..  ]
[; ;main.c: 132: lcd_goto(0x00);
"132
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;main.c: 133: lcd_puts("  Mode  Select  ");
"133
[e ( _lcd_puts (1 :s 3C ]
[; ;main.c: 134: IndicateSelectedMode(0x40);
"134
[e ( _IndicateSelectedMode (1 -> -> 64 `i `uc ]
[; ;main.c: 136: while((button != 3) && (button != 4))
"136
[e $U 156  ]
[e :U 157 ]
[; ;main.c: 137: {
"137
{
[; ;main.c: 138: button = ButtonPush();
"138
[e = _button ( _ButtonPush ..  ]
[; ;main.c: 140: if(button == 1)
"140
[e $ ! == _button -> 1 `i 159  ]
[; ;main.c: 141: {
"141
{
[; ;main.c: 142: mode --;
"142
[e -- _mode -> 1 `i ]
[; ;main.c: 143: if(mode < 0)
"143
[e $ ! < _mode -> 0 `i 160  ]
[; ;main.c: 144: mode += 5;
"144
[e =+ _mode -> 5 `i ]
[e :U 160 ]
[; ;main.c: 145: IndicateSelectedMode(0x40);
"145
[e ( _IndicateSelectedMode (1 -> -> 64 `i `uc ]
"146
}
[e :U 159 ]
[; ;main.c: 146: }
[; ;main.c: 147: if(button == 2)
"147
[e $ ! == _button -> 2 `i 161  ]
[; ;main.c: 148: {
"148
{
[; ;main.c: 149: mode ++;
"149
[e ++ _mode -> 1 `i ]
[; ;main.c: 150: if(mode > 4)
"150
[e $ ! > _mode -> 4 `i 162  ]
[; ;main.c: 151: mode -= 5;
"151
[e =- _mode -> 5 `i ]
[e :U 162 ]
[; ;main.c: 152: IndicateSelectedMode(0x40);
"152
[e ( _IndicateSelectedMode (1 -> -> 64 `i `uc ]
"153
}
[e :U 161 ]
"154
}
[e :U 156 ]
"136
[e $ && != _button -> 3 `i != _button -> 4 `i 157  ]
[e :U 158 ]
[; ;main.c: 153: }
[; ;main.c: 154: }
[; ;main.c: 155: if(button == 4)
"155
[e $ ! == _button -> 4 `i 163  ]
[; ;main.c: 156: state = 7;
"156
[e = _state -> 7 `i ]
[e $U 164  ]
"157
[e :U 163 ]
[; ;main.c: 157: else
[; ;main.c: 158: state = 1;
"158
[e = _state -> 1 `i ]
[e :U 164 ]
[; ;main.c: 159: }
"159
[e :UE 155 ]
}
"160
[v _Setting `(v ~T0 @X0 1 ef ]
"161
{
[; ;main.c: 160: void Setting(void)
[; ;main.c: 161: {
[e :U _Setting ]
[f ]
"162
[v _setmode `i ~T0 @X0 1 a ]
[; ;main.c: 162: int setmode = 0;
[e = _setmode -> 0 `i ]
"163
[v _button `i ~T0 @X0 1 a ]
[; ;main.c: 163: int button = 0;
[e = _button -> 0 `i ]
[; ;main.c: 165: lcd_clear();
"165
[e ( _lcd_clear ..  ]
[; ;main.c: 166: lcd_goto(0x00);
"166
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;main.c: 167: lcd_puts("Settig Mode");
"167
[e ( _lcd_puts (1 :s 4C ]
[; ;main.c: 168: lcd_goto(0x40);
"168
[e ( _lcd_goto (1 -> -> 64 `i `uc ]
[; ;main.c: 169: IndicadeSettingMode(setmode);
"169
[e ( _IndicadeSettingMode (1 _setmode ]
[; ;main.c: 171: while(button != 3)
"171
[e $U 166  ]
[e :U 167 ]
[; ;main.c: 172: {
"172
{
[; ;main.c: 173: button = ButtonPush();
"173
[e = _button ( _ButtonPush ..  ]
[; ;main.c: 175: if(button == 1)
"175
[e $ ! == _button -> 1 `i 169  ]
[; ;main.c: 176: {
"176
{
[; ;main.c: 177: setmode ++;
"177
[e ++ _setmode -> 1 `i ]
[; ;main.c: 178: if(setmode > 0)
"178
[e $ ! > _setmode -> 0 `i 170  ]
[; ;main.c: 179: setmode -= setmode;
"179
[e =- _setmode _setmode ]
[e :U 170 ]
"180
}
[e :U 169 ]
[; ;main.c: 180: }
[; ;main.c: 181: if(button == 2)
"181
[e $ ! == _button -> 2 `i 171  ]
[; ;main.c: 182: {
"182
{
[; ;main.c: 183: setmode --;
"183
[e -- _setmode -> 1 `i ]
[; ;main.c: 184: if(setmode < 0)
"184
[e $ ! < _setmode -> 0 `i 172  ]
[; ;main.c: 185: setmode += 1;
"185
[e =+ _setmode -> 1 `i ]
[e :U 172 ]
"186
}
[e :U 171 ]
[; ;main.c: 186: }
[; ;main.c: 187: lcd_goto(0x40);
"187
[e ( _lcd_goto (1 -> -> 64 `i `uc ]
[; ;main.c: 188: IndicadeSettingMode(setmode);
"188
[e ( _IndicadeSettingMode (1 _setmode ]
"189
}
[e :U 166 ]
"171
[e $ != _button -> 3 `i 167  ]
[e :U 168 ]
[; ;main.c: 189: }
[; ;main.c: 191: switch(setmode)
"191
[e $U 174  ]
[; ;main.c: 192: {
"192
{
[; ;main.c: 193: case 0 : SetIntervalTime();
"193
[e :U 175 ]
[e ( _SetIntervalTime ..  ]
[; ;main.c: 194: break;
"194
[e $U 173  ]
[; ;main.c: 195: default: SetIntervalTime();
"195
[e :U 176 ]
[e ( _SetIntervalTime ..  ]
"197
}
[; ;main.c: 197: }
[e $U 173  ]
"191
[e :U 174 ]
[e [\ _setmode , $ -> 0 `i 175
 176 ]
"197
[e :U 173 ]
[; ;main.c: 198: state = 0;
"198
[e = _state -> 0 `i ]
[; ;main.c: 199: }
"199
[e :UE 165 ]
}
"201
[v _SetCheckRow `(v ~T0 @X0 1 ef ]
"202
{
[; ;main.c: 201: void SetCheckRow(void)
[; ;main.c: 202: {
[e :U _SetCheckRow ]
[f ]
"203
[v _i `i ~T0 @X0 1 a ]
"204
[v _button `i ~T0 @X0 1 a ]
[; ;main.c: 203: int i;
[; ;main.c: 204: int button = 0;
[e = _button -> 0 `i ]
"205
[v _cursor `i ~T0 @X0 1 a ]
[; ;main.c: 205: int cursor = 0;
[e = _cursor -> 0 `i ]
[; ;main.c: 207: if((mode == 0) || (mode == 1) || (mode == 2))
"207
[e $ ! || || == _mode -> 0 `i == _mode -> 1 `i == _mode -> 2 `i 178  ]
[; ;main.c: 208: {
"208
{
[; ;main.c: 209: for(i=0;i<8;i++)
"209
{
[e = _i -> 0 `i ]
[e $ < _i -> 8 `i 179  ]
[e $U 180  ]
"210
[e :U 179 ]
[; ;main.c: 210: {
{
[; ;main.c: 211: checkrow[i] = i+1;
"211
[e = *U + &U _checkrow * -> -> _i `ui `ux -> -> # *U &U _checkrow `ui `ux + _i -> 1 `i ]
"212
}
"209
[e ++ _i -> 1 `i ]
[e $ < _i -> 8 `i 179  ]
[e :U 180 ]
"212
}
[; ;main.c: 212: }
[; ;main.c: 214: if(mode == 1)
"214
[e $ ! == _mode -> 1 `i 182  ]
[; ;main.c: 215: {
"215
{
[; ;main.c: 216: checkrow[0] = 3;
"216
[e = *U + &U _checkrow * -> -> -> 0 `i `ui `ux -> -> # *U &U _checkrow `ui `ux -> 3 `i ]
[; ;main.c: 217: checkrow[1] = 6;
"217
[e = *U + &U _checkrow * -> -> -> 1 `i `ui `ux -> -> # *U &U _checkrow `ui `ux -> 6 `i ]
[; ;main.c: 218: checkrow[2] = 1;
"218
[e = *U + &U _checkrow * -> -> -> 2 `i `ui `ux -> -> # *U &U _checkrow `ui `ux -> 1 `i ]
[; ;main.c: 219: checkrow[5] = 2;
"219
[e = *U + &U _checkrow * -> -> -> 5 `i `ui `ux -> -> # *U &U _checkrow `ui `ux -> 2 `i ]
"220
}
[e :U 182 ]
[; ;main.c: 220: }
[; ;main.c: 221: if(mode == 2)
"221
[e $ ! == _mode -> 2 `i 183  ]
[; ;main.c: 222: {
"222
{
[; ;main.c: 223: checkrow[0] = 3;
"223
[e = *U + &U _checkrow * -> -> -> 0 `i `ui `ux -> -> # *U &U _checkrow `ui `ux -> 3 `i ]
[; ;main.c: 224: checkrow[1] = 6;
"224
[e = *U + &U _checkrow * -> -> -> 1 `i `ui `ux -> -> # *U &U _checkrow `ui `ux -> 6 `i ]
[; ;main.c: 225: checkrow[2] = 1;
"225
[e = *U + &U _checkrow * -> -> -> 2 `i `ui `ux -> -> # *U &U _checkrow `ui `ux -> 1 `i ]
[; ;main.c: 226: checkrow[5] = 2;
"226
[e = *U + &U _checkrow * -> -> -> 5 `i `ui `ux -> -> # *U &U _checkrow `ui `ux -> 2 `i ]
[; ;main.c: 227: checkrow[3] = 7;
"227
[e = *U + &U _checkrow * -> -> -> 3 `i `ui `ux -> -> # *U &U _checkrow `ui `ux -> 7 `i ]
[; ;main.c: 228: checkrow[4] = 8;
"228
[e = *U + &U _checkrow * -> -> -> 4 `i `ui `ux -> -> # *U &U _checkrow `ui `ux -> 8 `i ]
[; ;main.c: 229: checkrow[6] = 4;
"229
[e = *U + &U _checkrow * -> -> -> 6 `i `ui `ux -> -> # *U &U _checkrow `ui `ux -> 4 `i ]
[; ;main.c: 230: checkrow[7] = 5;
"230
[e = *U + &U _checkrow * -> -> -> 7 `i `ui `ux -> -> # *U &U _checkrow `ui `ux -> 5 `i ]
"231
}
[e :U 183 ]
"232
}
[; ;main.c: 231: }
[; ;main.c: 232: }else if(mode == 3)
[e $U 184  ]
[e :U 178 ]
[e $ ! == _mode -> 3 `i 185  ]
[; ;main.c: 233: {
"233
{
[; ;main.c: 234: lcd_clear();
"234
[e ( _lcd_clear ..  ]
[; ;main.c: 235: lcd_goto(0x00);
"235
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;main.c: 236: lcd_puts("    12345678    ");
"236
[e ( _lcd_puts (1 :s 5C ]
[; ;main.c: 237: lcd_goto(0x44);
"237
[e ( _lcd_goto (1 -> -> 68 `i `uc ]
[; ;main.c: 238: for(i=0;i<8;i++)
"238
{
[e = _i -> 0 `i ]
[e $ < _i -> 8 `i 186  ]
[e $U 187  ]
"239
[e :U 186 ]
[; ;main.c: 239: {
{
[; ;main.c: 240: lcd_putch((char)(0x30 + checkrow[i]));
"240
[e ( _lcd_putch (1 -> + -> 48 `i *U + &U _checkrow * -> -> _i `ui `ux -> -> # *U &U _checkrow `ui `ux `uc ]
"241
}
"238
[e ++ _i -> 1 `i ]
[e $ < _i -> 8 `i 186  ]
[e :U 187 ]
"241
}
[; ;main.c: 241: }
[; ;main.c: 242: lcd_goto(0x44);
"242
[e ( _lcd_goto (1 -> -> 68 `i `uc ]
[; ;main.c: 243: lcd_cmd(0b00001111);
"243
[e ( _lcd_cmd (1 -> -> 15 `i `uc ]
[; ;main.c: 245: while(button != 3 && button != 4)
"245
[e $U 189  ]
[e :U 190 ]
[; ;main.c: 246: {
"246
{
[; ;main.c: 247: button = ButtonPush();
"247
[e = _button ( _ButtonPush ..  ]
[; ;main.c: 249: if(button == 1)
"249
[e $ ! == _button -> 1 `i 192  ]
[; ;main.c: 250: {
"250
{
[; ;main.c: 251: cursor ++;
"251
[e ++ _cursor -> 1 `i ]
[; ;main.c: 252: if(cursor > 7)
"252
[e $ ! > _cursor -> 7 `i 193  ]
[; ;main.c: 253: cursor -= 8;
"253
[e =- _cursor -> 8 `i ]
[e :U 193 ]
[; ;main.c: 254: lcd_goto(0x44 + cursor);
"254
[e ( _lcd_goto (1 -> + -> 68 `i _cursor `uc ]
"255
}
[e :U 192 ]
[; ;main.c: 255: }
[; ;main.c: 257: if(button == 2)
"257
[e $ ! == _button -> 2 `i 194  ]
[; ;main.c: 258: {
"258
{
[; ;main.c: 259: checkrow[cursor] ++;
"259
[e ++ *U + &U _checkrow * -> -> _cursor `ui `ux -> -> # *U &U _checkrow `ui `ux -> 1 `i ]
[; ;main.c: 260: if(checkrow[cursor] > 8)
"260
[e $ ! > *U + &U _checkrow * -> -> _cursor `ui `ux -> -> # *U &U _checkrow `ui `ux -> 8 `i 195  ]
[; ;main.c: 261: checkrow[cursor] -= 8;
"261
[e =- *U + &U _checkrow * -> -> _cursor `ui `ux -> -> # *U &U _checkrow `ui `ux -> 8 `i ]
[e :U 195 ]
[; ;main.c: 262: lcd_putch((char)(0x30 + checkrow[cursor]));
"262
[e ( _lcd_putch (1 -> + -> 48 `i *U + &U _checkrow * -> -> _cursor `ui `ux -> -> # *U &U _checkrow `ui `ux `uc ]
[; ;main.c: 263: lcd_goto(0x44 + cursor);
"263
[e ( _lcd_goto (1 -> + -> 68 `i _cursor `uc ]
"264
}
[e :U 194 ]
"265
}
[e :U 189 ]
"245
[e $ && != _button -> 3 `i != _button -> 4 `i 190  ]
[e :U 191 ]
[; ;main.c: 264: }
[; ;main.c: 265: }
[; ;main.c: 266: lcd_cmd(0b00001100);
"266
[e ( _lcd_cmd (1 -> -> 12 `i `uc ]
"267
}
[e :U 185 ]
"268
[e :U 184 ]
[; ;main.c: 267: }
[; ;main.c: 268: if(button == 4)
[e $ ! == _button -> 4 `i 196  ]
[; ;main.c: 269: state = 0;
"269
[e = _state -> 0 `i ]
[e $U 197  ]
"270
[e :U 196 ]
[; ;main.c: 270: else
[; ;main.c: 271: state = 2;
"271
[e = _state -> 2 `i ]
[e :U 197 ]
[; ;main.c: 272: }
"272
[e :UE 177 ]
}
"274
[v _SetNumberOfTimes `(v ~T0 @X0 1 ef ]
"275
{
[; ;main.c: 274: void SetNumberOfTimes(void)
[; ;main.c: 275: {
[e :U _SetNumberOfTimes ]
[f ]
"276
[v _i `i ~T0 @X0 1 a ]
"277
[v _numstr `uc ~T0 @X0 -> 4 `i a ]
"278
[v _button `i ~T0 @X0 1 a ]
[; ;main.c: 276: int i;
[; ;main.c: 277: char numstr[4];
[; ;main.c: 278: int button = 0;
[e = _button -> 0 `i ]
"279
[v _cursor `i ~T0 @X0 1 a ]
[; ;main.c: 279: int cursor = 2;
[e = _cursor -> 2 `i ]
[; ;main.c: 281: lcd_clear();
"281
[e ( _lcd_clear ..  ]
[; ;main.c: 282: lcd_goto(0x00);
"282
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;main.c: 283: lcd_puts("SetNumberOfTimes");
"283
[e ( _lcd_puts (1 :s 6C ]
[; ;main.c: 284: lcd_goto(0x40);
"284
[e ( _lcd_goto (1 -> -> 64 `i `uc ]
[; ;main.c: 285: lcd_putint(numstr, times, 10, 4, 0);
"285
[e ( _lcd_putint (4 , , , , &U _numstr _times -> 10 `i -> 4 `i -> -> 0 `i `uc ]
[; ;main.c: 286: lcd_goto(0x43);
"286
[e ( _lcd_goto (1 -> -> 67 `i `uc ]
[; ;main.c: 287: lcd_puts(" times");
"287
[e ( _lcd_puts (1 :s 7C ]
[; ;main.c: 288: lcd_goto(0x40 + cursor);
"288
[e ( _lcd_goto (1 -> + -> 64 `i _cursor `uc ]
[; ;main.c: 290: lcd_cmd(0b00001110);
"290
[e ( _lcd_cmd (1 -> -> 14 `i `uc ]
[; ;main.c: 292: if(mode != 4)
"292
[e $ ! != _mode -> 4 `i 199  ]
[; ;main.c: 293: {
"293
{
[; ;main.c: 294: while((button != 3) && (button != 4))
"294
[e $U 200  ]
[e :U 201 ]
[; ;main.c: 295: {
"295
{
[; ;main.c: 296: button = ButtonPush();
"296
[e = _button ( _ButtonPush ..  ]
[; ;main.c: 298: if(button == 1)
"298
[e $ ! == _button -> 1 `i 203  ]
[; ;main.c: 299: {
"299
{
[; ;main.c: 300: cursor --;
"300
[e -- _cursor -> 1 `i ]
[; ;main.c: 301: if(cursor < 0)
"301
[e $ ! < _cursor -> 0 `i 204  ]
[; ;main.c: 302: cursor += 3;
"302
[e =+ _cursor -> 3 `i ]
[e :U 204 ]
[; ;main.c: 303: lcd_goto(0x40 + cursor);
"303
[e ( _lcd_goto (1 -> + -> 64 `i _cursor `uc ]
"304
}
[e :U 203 ]
[; ;main.c: 304: }
[; ;main.c: 319: if(button == 2)
"319
[e $ ! == _button -> 2 `i 205  ]
[; ;main.c: 320: {
"320
{
[; ;main.c: 321: if(cursor == 0)
"321
[e $ ! == _cursor -> 0 `i 206  ]
[; ;main.c: 322: {
"322
{
[; ;main.c: 323: if(times/100 == 9)
"323
[e $ ! == / _times -> 100 `i -> 9 `i 207  ]
[; ;main.c: 324: times -= 1000;
"324
[e =- _times -> 1000 `i ]
[e :U 207 ]
[; ;main.c: 325: times += 100;
"325
[e =+ _times -> 100 `i ]
"326
}
[; ;main.c: 326: }else if(cursor == 1){
[e $U 208  ]
[e :U 206 ]
[e $ ! == _cursor -> 1 `i 209  ]
{
[; ;main.c: 327: if((times / 10) % 10 == 9)
"327
[e $ ! == % / _times -> 10 `i -> 10 `i -> 9 `i 210  ]
[; ;main.c: 328: times -= 100;
"328
[e =- _times -> 100 `i ]
[e :U 210 ]
[; ;main.c: 329: times += 10;
"329
[e =+ _times -> 10 `i ]
"330
}
[; ;main.c: 330: }else{
[e $U 211  ]
[e :U 209 ]
{
[; ;main.c: 331: if(times % 10 == 9)
"331
[e $ ! == % _times -> 10 `i -> 9 `i 212  ]
[; ;main.c: 332: times -= 10;
"332
[e =- _times -> 10 `i ]
[e :U 212 ]
[; ;main.c: 333: times ++;
"333
[e ++ _times -> 1 `i ]
"334
}
[e :U 211 ]
[e :U 208 ]
[; ;main.c: 334: }
[; ;main.c: 336: lcd_goto(0x40);
"336
[e ( _lcd_goto (1 -> -> 64 `i `uc ]
[; ;main.c: 337: lcd_putint(numstr, times, 10, 4, 0);
"337
[e ( _lcd_putint (4 , , , , &U _numstr _times -> 10 `i -> 4 `i -> -> 0 `i `uc ]
[; ;main.c: 338: lcd_goto(0x40 + cursor);
"338
[e ( _lcd_goto (1 -> + -> 64 `i _cursor `uc ]
"339
}
[e :U 205 ]
"340
}
[e :U 200 ]
"294
[e $ && != _button -> 3 `i != _button -> 4 `i 201  ]
[e :U 202 ]
"341
}
[e :U 199 ]
[; ;main.c: 339: }
[; ;main.c: 340: }
[; ;main.c: 341: }
[; ;main.c: 343: lcd_cmd(0b00001100);
"343
[e ( _lcd_cmd (1 -> -> 12 `i `uc ]
[; ;main.c: 344: eeprom_write_int(0x00, times);
"344
[e ( _eeprom_write_int (2 , -> -> 0 `i `uc _times ]
[; ;main.c: 346: if(button == 4)
"346
[e $ ! == _button -> 4 `i 213  ]
[; ;main.c: 347: state = 0;
"347
[e = _state -> 0 `i ]
[e $U 214  ]
"348
[e :U 213 ]
[; ;main.c: 348: else
[; ;main.c: 349: state = 3;
"349
[e = _state -> 3 `i ]
[e :U 214 ]
[; ;main.c: 350: }
"350
[e :UE 198 ]
}
"352
[v _Confirm `(v ~T0 @X0 1 ef ]
"353
{
[; ;main.c: 352: void Confirm(void)
[; ;main.c: 353: {
[e :U _Confirm ]
[f ]
"354
[v _chknum `uc ~T0 @X0 -> 4 `i a ]
[; ;main.c: 354: char chknum[4];
[; ;main.c: 355: lcd_clear();
"355
[e ( _lcd_clear ..  ]
[; ;main.c: 356: lcd_goto(0x00);
"356
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;main.c: 357: lcd_puts("MODE:");
"357
[e ( _lcd_puts (1 :s 8C ]
[; ;main.c: 359: switch(mode)
"359
[e $U 217  ]
[; ;main.c: 360: {
"360
{
[; ;main.c: 361: case 0 : lcd_puts("STRAIGHT  ");
"361
[e :U 218 ]
[e ( _lcd_puts (1 :s 9C ]
[; ;main.c: 362: break;
"362
[e $U 216  ]
[; ;main.c: 363: case 1 : lcd_puts("CROSS     ");
"363
[e :U 219 ]
[e ( _lcd_puts (1 :s 10C ]
[; ;main.c: 364: break;
"364
[e $U 216  ]
[; ;main.c: 365: case 2 : lcd_puts("FULL CROSS");
"365
[e :U 220 ]
[e ( _lcd_puts (1 :s 11C ]
[; ;main.c: 366: break;
"366
[e $U 216  ]
[; ;main.c: 367: case 3 : lcd_puts("CUSTOM    ");
"367
[e :U 221 ]
[e ( _lcd_puts (1 :s 12C ]
[; ;main.c: 368: break;
"368
[e $U 216  ]
[; ;main.c: 369: case 4 : lcd_puts("DEBUG     ");
"369
[e :U 222 ]
[e ( _lcd_puts (1 :s 13C ]
[; ;main.c: 370: break;
"370
[e $U 216  ]
[; ;main.c: 371: default: lcd_puts("??????????");
"371
[e :U 223 ]
[e ( _lcd_puts (1 :s 14C ]
"372
}
[; ;main.c: 372: }
[e $U 216  ]
"359
[e :U 217 ]
[e [\ _mode , $ -> 0 `i 218
 , $ -> 1 `i 219
 , $ -> 2 `i 220
 , $ -> 3 `i 221
 , $ -> 4 `i 222
 223 ]
"372
[e :U 216 ]
[; ;main.c: 374: if(mode != 4)
"374
[e $ ! != _mode -> 4 `i 224  ]
[; ;main.c: 375: {
"375
{
[; ;main.c: 376: lcd_goto(0x46);
"376
[e ( _lcd_goto (1 -> -> 70 `i `uc ]
[; ;main.c: 377: lcd_putint(chknum, times, 10, 4, 1);
"377
[e ( _lcd_putint (4 , , , , &U _chknum _times -> 10 `i -> 4 `i -> -> 1 `i `uc ]
[; ;main.c: 378: lcd_puts(" TIMES");
"378
[e ( _lcd_puts (1 :s 15C ]
"379
}
[e :U 224 ]
[; ;main.c: 379: }
[; ;main.c: 381: if(ButtonPush() == 3)
"381
[e $ ! == ( _ButtonPush ..  -> 3 `i 225  ]
[; ;main.c: 382: {
"382
{
[; ;main.c: 383: state = 4;
"383
[e = _state -> 4 `i ]
[; ;main.c: 384: if(mode == 4)
"384
[e $ ! == _mode -> 4 `i 226  ]
[; ;main.c: 385: state = 5;
"385
[e = _state -> 5 `i ]
[e :U 226 ]
"386
}
[; ;main.c: 386: }else{
[e $U 227  ]
[e :U 225 ]
{
[; ;main.c: 387: if(mode == 4)
"387
[e $ ! == _mode -> 4 `i 228  ]
[; ;main.c: 388: state = 0;
"388
[e = _state -> 0 `i ]
[e $U 229  ]
"389
[e :U 228 ]
[; ;main.c: 389: else
[; ;main.c: 390: state = 2;
"390
[e = _state -> 2 `i ]
[e :U 229 ]
"391
}
[e :U 227 ]
[; ;main.c: 391: }
[; ;main.c: 392: }
"392
[e :UE 215 ]
}
"394
[v _CheckDo `(v ~T0 @X0 1 ef ]
"395
{
[; ;main.c: 394: void CheckDo(void)
[; ;main.c: 395: {
[e :U _CheckDo ]
[f ]
"396
[v _i `i ~T0 @X0 1 a ]
[v _j `i ~T0 @X0 1 a ]
[v _k `i ~T0 @X0 1 a ]
"397
[v _result `uc ~T0 @X0 1 a ]
[; ;main.c: 396: int i,j,k;
[; ;main.c: 397: char result = 0x00;
[e = _result -> -> 0 `i `uc ]
"398
[v _expected `uc ~T0 @X0 1 a ]
[; ;main.c: 398: char expected = 0x00;
[e = _expected -> -> 0 `i `uc ]
[v F1741 `uc ~T0 @X0 -> 4 `i s ]
[i F1741
:U ..
"399
-> -> 0 `i `uc
..
]
[v _checked_num `uc ~T0 @X0 -> 4 `i a ]
[; ;main.c: 399: char checked_num[4] = {0x00};
[e = _checked_num F1741 ]
"400
[v _success_check `i ~T0 @X0 1 a ]
[; ;main.c: 400: int success_check = 0;
[e = _success_check -> 0 `i ]
[; ;main.c: 402: ok_num = 0;
"402
[e = _ok_num -> 0 `i ]
[; ;main.c: 403: ng_num = 0;
"403
[e = _ng_num -> 0 `i ]
[; ;main.c: 405: lcd_clear();
"405
[e ( _lcd_clear ..  ]
[; ;main.c: 406: lcd_puts("Checking...");
"406
[e ( _lcd_puts (1 :s 16C ]
[; ;main.c: 407: lcd_goto(0x40);
"407
[e ( _lcd_goto (1 -> -> 64 `i `uc ]
[; ;main.c: 408: for(i=0;i<times;i++)
"408
{
[e = _i -> 0 `i ]
[e $U 234  ]
"409
[e :U 231 ]
[; ;main.c: 409: {
{
[; ;main.c: 410: success_check = 0;
"410
[e = _success_check -> 0 `i ]
[; ;main.c: 411: for(j=0;j<8;j++)
"411
{
[e = _j -> 0 `i ]
[e $ < _j -> 8 `i 235  ]
[e $U 236  ]
"412
[e :U 235 ]
[; ;main.c: 412: {
{
[; ;main.c: 413: PORTB = 1 << j;
"413
[e = _PORTB -> << -> 1 `i _j `uc ]
[; ;main.c: 414: expected = 0x00;
"414
[e = _expected -> -> 0 `i `uc ]
[; ;main.c: 416: for(k=0;k<8;k++)
"416
{
[e = _k -> 0 `i ]
[e $ < _k -> 8 `i 238  ]
[e $U 239  ]
"417
[e :U 238 ]
[; ;main.c: 417: {
{
[; ;main.c: 418: if(checkrow[k] - 1 == j)
"418
[e $ ! == - *U + &U _checkrow * -> -> _k `ui `ux -> -> # *U &U _checkrow `ui `ux -> 1 `i _j 241  ]
[; ;main.c: 419: expected |= (1 << k);
"419
[e =| _expected -> << -> 1 `i _k `uc ]
[e :U 241 ]
"420
}
"416
[e ++ _k -> 1 `i ]
[e $ < _k -> 8 `i 238  ]
[e :U 239 ]
"420
}
[; ;main.c: 420: }
[; ;main.c: 421: for(k=0;k<interval_time_ms;k++)
"421
{
[e = _k -> 0 `i ]
[e $U 245  ]
"422
[e :U 242 ]
[; ;main.c: 422: _delay((unsigned long)((1)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"421
[e ++ _k -> 1 `i ]
[e :U 245 ]
[e $ < _k _interval_time_ms 242  ]
[e :U 243 ]
"422
}
[; ;main.c: 424: result = PORTD;
"424
[e = _result _PORTD ]
[; ;main.c: 426: if(result == expected)
"426
[e $ ! == -> _result `i -> _expected `i 246  ]
[; ;main.c: 427: success_check ++;
"427
[e ++ _success_check -> 1 `i ]
[e :U 246 ]
"428
}
"411
[e ++ _j -> 1 `i ]
[e $ < _j -> 8 `i 235  ]
[e :U 236 ]
"428
}
[; ;main.c: 428: }
[; ;main.c: 429: lcd_goto(0x0B);
"429
[e ( _lcd_goto (1 -> -> 11 `i `uc ]
[; ;main.c: 430: lcd_putch('(');
"430
[e ( _lcd_putch (1 -> -> 40 `ui `uc ]
[; ;main.c: 431: lcd_putint(checked_num, i + 1, 10, 4, 1);
"431
[e ( _lcd_putint (4 , , , , &U _checked_num + _i -> 1 `i -> 10 `i -> 4 `i -> -> 1 `i `uc ]
[; ;main.c: 432: lcd_putch(')');
"432
[e ( _lcd_putch (1 -> -> 41 `ui `uc ]
[; ;main.c: 433: lcd_goto(0x40 + (ok_num + ng_num) % 17);
"433
[e ( _lcd_goto (1 -> + -> 64 `i % + _ok_num _ng_num -> 17 `i `uc ]
[; ;main.c: 434: if(success_check == 8)
"434
[e $ ! == _success_check -> 8 `i 247  ]
[; ;main.c: 435: {
"435
{
[; ;main.c: 436: ok_num ++;
"436
[e ++ _ok_num -> 1 `i ]
[; ;main.c: 437: lcd_putch('!');
"437
[e ( _lcd_putch (1 -> -> 33 `ui `uc ]
"438
}
[; ;main.c: 438: }else{
[e $U 248  ]
[e :U 247 ]
{
[; ;main.c: 439: ng_num ++;
"439
[e ++ _ng_num -> 1 `i ]
[; ;main.c: 440: lcd_putch('.');
"440
[e ( _lcd_putch (1 -> -> 46 `ui `uc ]
"441
}
[e :U 248 ]
"442
}
"408
[e ++ _i -> 1 `i ]
[e :U 234 ]
[e $ < _i _times 231  ]
[e :U 232 ]
"442
}
[; ;main.c: 441: }
[; ;main.c: 442: }
[; ;main.c: 444: PORTB = 0x00;
"444
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 445: state = 6;
"445
[e = _state -> 6 `i ]
[; ;main.c: 446: }
"446
[e :UE 230 ]
}
"448
[v _DebugMode `(v ~T0 @X0 1 ef ]
"449
{
[; ;main.c: 448: void DebugMode(void)
[; ;main.c: 449: {
[e :U _DebugMode ]
[f ]
[v F1746 `uc ~T0 @X0 -> 9 `i s ]
[i F1746
:U ..
"450
-> -> 0 `i `uc
..
]
[v _debug_arr `uc ~T0 @X0 -> 9 `i a ]
[; ;main.c: 450: char debug_arr[9] = {0x00};
[e = _debug_arr F1746 ]
"451
[v _i `i ~T0 @X0 1 a ]
[v _j `i ~T0 @X0 1 a ]
"452
[v _result `uc ~T0 @X0 1 a ]
[; ;main.c: 451: int i,j;
[; ;main.c: 452: char result = 0x00;
[e = _result -> -> 0 `i `uc ]
[; ;main.c: 454: lcd_clear();
"454
[e ( _lcd_clear ..  ]
[; ;main.c: 455: lcd_goto(0x00);
"455
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;main.c: 456: lcd_puts("    12345678    ");
"456
[e ( _lcd_puts (1 :s 17C ]
[; ;main.c: 458: while(RC2 && RC1 && RC0)
"458
[e $U 250  ]
[e :U 251 ]
[; ;main.c: 459: {
"459
{
[; ;main.c: 460: for(i=0;i<9;i++)
"460
{
[e = _i -> 0 `i ]
[e $ < _i -> 9 `i 253  ]
[e $U 254  ]
"461
[e :U 253 ]
[; ;main.c: 461: {
{
[; ;main.c: 462: debug_arr[i] = 0x00;
"462
[e = *U + &U _debug_arr * -> -> _i `ui `ux -> -> # *U &U _debug_arr `ui `ux -> -> 0 `i `uc ]
"463
}
"460
[e ++ _i -> 1 `i ]
[e $ < _i -> 9 `i 253  ]
[e :U 254 ]
"463
}
[; ;main.c: 463: }
[; ;main.c: 465: for(i=0;i<8;i++)
"465
{
[e = _i -> 0 `i ]
[e $ < _i -> 8 `i 256  ]
[e $U 257  ]
"466
[e :U 256 ]
[; ;main.c: 466: {
{
[; ;main.c: 467: PORTB = 1 << i;
"467
[e = _PORTB -> << -> 1 `i _i `uc ]
[; ;main.c: 469: for(j=0;j<interval_time_ms;j++)
"469
{
[e = _j -> 0 `i ]
[e $U 262  ]
"470
[e :U 259 ]
[; ;main.c: 470: _delay((unsigned long)((1)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"469
[e ++ _j -> 1 `i ]
[e :U 262 ]
[e $ < _j _interval_time_ms 259  ]
[e :U 260 ]
"470
}
[; ;main.c: 472: result = PORTD;
"472
[e = _result _PORTD ]
[; ;main.c: 474: for(j=0;j<8;j++)
"474
{
[e = _j -> 0 `i ]
[e $ < _j -> 8 `i 263  ]
[e $U 264  ]
"475
[e :U 263 ]
[; ;main.c: 475: {
{
[; ;main.c: 476: if((result >> j) % 2 == 1)
"476
[e $ ! == % >> -> _result `i _j -> 2 `i -> 1 `i 266  ]
[; ;main.c: 477: {
"477
{
[; ;main.c: 478: if(debug_arr[j] == 0x00)
"478
[e $ ! == -> *U + &U _debug_arr * -> -> _j `ui `ux -> -> # *U &U _debug_arr `ui `ux `i -> 0 `i 267  ]
[; ;main.c: 479: debug_arr[j] = 0x31 + i;
"479
[e = *U + &U _debug_arr * -> -> _j `ui `ux -> -> # *U &U _debug_arr `ui `ux -> + -> 49 `i _i `uc ]
[e $U 268  ]
"480
[e :U 267 ]
[; ;main.c: 480: else
[; ;main.c: 481: debug_arr[j] = 0x2A;
"481
[e = *U + &U _debug_arr * -> -> _j `ui `ux -> -> # *U &U _debug_arr `ui `ux -> -> 42 `i `uc ]
[e :U 268 ]
"482
}
[e :U 266 ]
"483
}
"474
[e ++ _j -> 1 `i ]
[e $ < _j -> 8 `i 263  ]
[e :U 264 ]
"483
}
"484
}
"465
[e ++ _i -> 1 `i ]
[e $ < _i -> 8 `i 256  ]
[e :U 257 ]
"484
}
[; ;main.c: 482: }
[; ;main.c: 483: }
[; ;main.c: 484: }
[; ;main.c: 485: lcd_goto(0x44);
"485
[e ( _lcd_goto (1 -> -> 68 `i `uc ]
[; ;main.c: 486: lcd_puts(debug_arr);
"486
[e ( _lcd_puts (1 -> &U _debug_arr `*Cuc ]
"487
}
[e :U 250 ]
"458
[e $ && && _RC2 _RC1 _RC0 251  ]
[e :U 252 ]
[; ;main.c: 487: }
[; ;main.c: 488: ButtonPush();
"488
[e ( _ButtonPush ..  ]
[; ;main.c: 489: PORTB = 0x00;
"489
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 490: state = 0;
"490
[e = _state -> 0 `i ]
[; ;main.c: 491: }
"491
[e :UE 249 ]
}
"493
[v _ShowResult `(v ~T0 @X0 1 ef ]
"494
{
[; ;main.c: 493: void ShowResult(void)
[; ;main.c: 494: {
[e :U _ShowResult ]
[f ]
"495
[v _result_str `uc ~T0 @X0 -> 4 `i a ]
[; ;main.c: 495: char result_str[4];
[; ;main.c: 497: lcd_clear();
"497
[e ( _lcd_clear ..  ]
[; ;main.c: 498: lcd_goto(0x00);
"498
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;main.c: 499: lcd_puts("Result");
"499
[e ( _lcd_puts (1 :s 18C ]
[; ;main.c: 500: lcd_goto(0x08);
"500
[e ( _lcd_goto (1 -> -> 8 `i `uc ]
[; ;main.c: 501: lcd_putch('(');
"501
[e ( _lcd_putch (1 -> -> 40 `ui `uc ]
[; ;main.c: 502: lcd_putint(result_str, (int)((ok_num / (ok_num + ng_num)*100)), 10 ,4, 1);
"502
[e ( _lcd_putint (4 , , , , &U _result_str * / _ok_num + _ok_num _ng_num -> 100 `i -> 10 `i -> 4 `i -> -> 1 `i `uc ]
[; ;main.c: 503: lcd_puts("%)");
"503
[e ( _lcd_puts (1 :s 19C ]
[; ;main.c: 504: lcd_goto(0x40);
"504
[e ( _lcd_goto (1 -> -> 64 `i `uc ]
[; ;main.c: 505: lcd_puts("OK:");
"505
[e ( _lcd_puts (1 :s 20C ]
[; ;main.c: 506: lcd_putint(result_str, ok_num, 10, 4, 1);
"506
[e ( _lcd_putint (4 , , , , &U _result_str _ok_num -> 10 `i -> 4 `i -> -> 1 `i `uc ]
[; ;main.c: 507: lcd_goto(0x48);
"507
[e ( _lcd_goto (1 -> -> 72 `i `uc ]
[; ;main.c: 508: lcd_puts("NG:");
"508
[e ( _lcd_puts (1 :s 21C ]
[; ;main.c: 509: lcd_putint(result_str, ng_num, 10, 4, 1);
"509
[e ( _lcd_putint (4 , , , , &U _result_str _ng_num -> 10 `i -> 4 `i -> -> 1 `i `uc ]
[; ;main.c: 511: ButtonPush();
"511
[e ( _ButtonPush ..  ]
[; ;main.c: 513: state = 0;
"513
[e = _state -> 0 `i ]
[; ;main.c: 514: }
"514
[e :UE 269 ]
}
"516
[v _ButtonPush `(i ~T0 @X0 1 ef ]
"517
{
[; ;main.c: 516: int ButtonPush(void)
[; ;main.c: 517: {
[e :U _ButtonPush ]
[f ]
"518
[v _push_value `i ~T0 @X0 1 a ]
[; ;main.c: 518: int push_value = 0;
[e = _push_value -> 0 `i ]
[; ;main.c: 519: while(RC2 && RC1 && RC0)
"519
[e $U 271  ]
[e :U 272 ]
[; ;main.c: 520: continue;
"520
[e $U 271  ]
[e :U 271 ]
"519
[e $ && && _RC2 _RC1 _RC0 272  ]
[e :U 273 ]
[; ;main.c: 522: do{
"522
[e :U 276 ]
{
[; ;main.c: 523: if(push_value != 4)
"523
[e $ ! != _push_value -> 4 `i 277  ]
[; ;main.c: 524: {
"524
{
[; ;main.c: 525: if(RC2 == 0)
"525
[e $ ! == -> _RC2 `i -> 0 `i 278  ]
[; ;main.c: 526: push_value = 1;
"526
[e = _push_value -> 1 `i ]
[e :U 278 ]
[; ;main.c: 527: if(RC1 == 0)
"527
[e $ ! == -> _RC1 `i -> 0 `i 279  ]
[; ;main.c: 528: push_value = 2;
"528
[e = _push_value -> 2 `i ]
[e :U 279 ]
[; ;main.c: 529: if(RC0 == 0)
"529
[e $ ! == -> _RC0 `i -> 0 `i 280  ]
[; ;main.c: 530: push_value = 3;
"530
[e = _push_value -> 3 `i ]
[e :U 280 ]
"531
}
[e :U 277 ]
[; ;main.c: 531: }
[; ;main.c: 532: if((RC2 == 0)&&(RC1 == 0))
"532
[e $ ! && == -> _RC2 `i -> 0 `i == -> _RC1 `i -> 0 `i 281  ]
[; ;main.c: 533: push_value = 4;
"533
[e = _push_value -> 4 `i ]
[e :U 281 ]
"534
}
[; ;main.c: 534: }while(!(RC2 && RC1 && RC0));
[e $ ! && && _RC2 _RC1 _RC0 276  ]
[e :U 275 ]
[; ;main.c: 536: return push_value;
"536
[e ) _push_value ]
[e $UE 270  ]
[; ;main.c: 537: }
"537
[e :UE 270 ]
}
"539
[v _IndicadeSettingMode `(v ~T0 @X0 1 ef1`i ]
"540
{
[; ;main.c: 539: void IndicadeSettingMode(int modenum)
[; ;main.c: 540: {
[e :U _IndicadeSettingMode ]
"539
[v _modenum `i ~T0 @X0 1 r1 ]
"540
[f ]
[; ;main.c: 541: switch(modenum)
"541
[e $U 284  ]
[; ;main.c: 542: {
"542
{
[; ;main.c: 543: case 0 : lcd_puts("SET:ScanWait(ms)");
"543
[e :U 285 ]
[e ( _lcd_puts (1 :s 22C ]
[; ;main.c: 544: break;
"544
[e $U 283  ]
[; ;main.c: 545: default : lcd_puts("SET:???");
"545
[e :U 286 ]
[e ( _lcd_puts (1 :s 23C ]
"546
}
[; ;main.c: 546: }
[e $U 283  ]
"541
[e :U 284 ]
[e [\ _modenum , $ -> 0 `i 285
 286 ]
"546
[e :U 283 ]
[; ;main.c: 547: }
"547
[e :UE 282 ]
}
"549
[v _IndicateSelectedMode `(v ~T0 @X0 1 ef1`uc ]
"550
{
[; ;main.c: 549: void IndicateSelectedMode(char start)
[; ;main.c: 550: {
[e :U _IndicateSelectedMode ]
"549
[v _start `uc ~T0 @X0 1 r1 ]
"550
[f ]
[; ;main.c: 551: lcd_goto(start);
"551
[e ( _lcd_goto (1 _start ]
[; ;main.c: 552: switch(mode)
"552
[e $U 289  ]
[; ;main.c: 553: {
"553
{
[; ;main.c: 554: case 0 : lcd_puts("MODE:STRAIGHT  ");
"554
[e :U 290 ]
[e ( _lcd_puts (1 :s 24C ]
[; ;main.c: 555: break;
"555
[e $U 288  ]
[; ;main.c: 556: case 1 : lcd_puts("MODE:CROSS     ");
"556
[e :U 291 ]
[e ( _lcd_puts (1 :s 25C ]
[; ;main.c: 557: break;
"557
[e $U 288  ]
[; ;main.c: 558: case 2 : lcd_puts("MODE:FULL CROSS");
"558
[e :U 292 ]
[e ( _lcd_puts (1 :s 26C ]
[; ;main.c: 559: break;
"559
[e $U 288  ]
[; ;main.c: 560: case 3 : lcd_puts("MODE:CUSTOM    ");
"560
[e :U 293 ]
[e ( _lcd_puts (1 :s 27C ]
[; ;main.c: 561: break;
"561
[e $U 288  ]
[; ;main.c: 562: case 4 : lcd_puts("MODE:DEBUG     ");
"562
[e :U 294 ]
[e ( _lcd_puts (1 :s 28C ]
[; ;main.c: 563: break;
"563
[e $U 288  ]
[; ;main.c: 564: default : lcd_puts("MODE:??????????");
"564
[e :U 295 ]
[e ( _lcd_puts (1 :s 29C ]
"565
}
[; ;main.c: 565: }
[e $U 288  ]
"552
[e :U 289 ]
[e [\ _mode , $ -> 0 `i 290
 , $ -> 1 `i 291
 , $ -> 2 `i 292
 , $ -> 3 `i 293
 , $ -> 4 `i 294
 295 ]
"565
[e :U 288 ]
[; ;main.c: 566: }
"566
[e :UE 287 ]
}
"568
[v _SetIntervalTime `(v ~T0 @X0 1 ef ]
"569
{
[; ;main.c: 568: void SetIntervalTime(void)
[; ;main.c: 569: {
[e :U _SetIntervalTime ]
[f ]
"570
[v _button `i ~T0 @X0 1 a ]
[; ;main.c: 570: int button = 0;
[e = _button -> 0 `i ]
[v F1761 `uc ~T0 @X0 -> 4 `i s ]
[i F1761
:U ..
"571
-> -> 0 `i `uc
..
]
[v _str `uc ~T0 @X0 -> 4 `i a ]
[; ;main.c: 571: char str[4] = {0x00};
[e = _str F1761 ]
[; ;main.c: 573: lcd_clear();
"573
[e ( _lcd_clear ..  ]
[; ;main.c: 574: lcd_goto(0x00);
"574
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;main.c: 575: lcd_puts("Set ScanWaitTime");
"575
[e ( _lcd_puts (1 :s 30C ]
[; ;main.c: 576: lcd_goto(0x40);
"576
[e ( _lcd_goto (1 -> -> 64 `i `uc ]
[; ;main.c: 577: lcd_putint(str, interval_time_ms, 10, 4, 1);
"577
[e ( _lcd_putint (4 , , , , &U _str _interval_time_ms -> 10 `i -> 4 `i -> -> 1 `i `uc ]
[; ;main.c: 578: lcd_goto(0x44);
"578
[e ( _lcd_goto (1 -> -> 68 `i `uc ]
[; ;main.c: 579: lcd_puts("ms/scan");
"579
[e ( _lcd_puts (1 :s 31C ]
[; ;main.c: 581: while(button != 3)
"581
[e $U 297  ]
[e :U 298 ]
[; ;main.c: 582: {
"582
{
[; ;main.c: 583: button = ButtonPush();
"583
[e = _button ( _ButtonPush ..  ]
[; ;main.c: 585: if(button == 1)
"585
[e $ ! == _button -> 1 `i 300  ]
[; ;main.c: 586: {
"586
{
[; ;main.c: 587: interval_time_ms --;
"587
[e -- _interval_time_ms -> 1 `i ]
[; ;main.c: 588: if(interval_time_ms < 1)
"588
[e $ ! < _interval_time_ms -> 1 `i 301  ]
[; ;main.c: 589: interval_time_ms += 999;
"589
[e =+ _interval_time_ms -> 999 `i ]
[e :U 301 ]
"590
}
[e :U 300 ]
[; ;main.c: 590: }
[; ;main.c: 591: if(button == 2)
"591
[e $ ! == _button -> 2 `i 302  ]
[; ;main.c: 592: {
"592
{
[; ;main.c: 593: interval_time_ms ++;
"593
[e ++ _interval_time_ms -> 1 `i ]
[; ;main.c: 594: if(interval_time_ms > 999)
"594
[e $ ! > _interval_time_ms -> 999 `i 303  ]
[; ;main.c: 595: interval_time_ms -= interval_time_ms - 1;
"595
[e =- _interval_time_ms - _interval_time_ms -> 1 `i ]
[e :U 303 ]
"596
}
[e :U 302 ]
[; ;main.c: 596: }
[; ;main.c: 597: lcd_goto(0x40);
"597
[e ( _lcd_goto (1 -> -> 64 `i `uc ]
[; ;main.c: 598: lcd_putint(str, interval_time_ms, 10, 4, 1);
"598
[e ( _lcd_putint (4 , , , , &U _str _interval_time_ms -> 10 `i -> 4 `i -> -> 1 `i `uc ]
"599
}
[e :U 297 ]
"581
[e $ != _button -> 3 `i 298  ]
[e :U 299 ]
[; ;main.c: 599: }
[; ;main.c: 601: eeprom_write_int(0x02, interval_time_ms);
"601
[e ( _eeprom_write_int (2 , -> -> 2 `i `uc _interval_time_ms ]
[; ;main.c: 602: }
"602
[e :UE 296 ]
}
[a 18C 82 101 115 117 108 116 0 ]
[a 7C 32 116 105 109 101 115 0 ]
[a 6C 83 101 116 78 117 109 98 101 114 79 102 84 105 109 101 115 0 ]
[a 1C 76 97 110 67 97 98 108 101 32 67 104 101 99 107 101 114 0 ]
[a 31C 109 115 47 115 99 97 110 0 ]
[a 30C 83 101 116 32 83 99 97 110 87 97 105 116 84 105 109 101 0 ]
[a 4C 83 101 116 116 105 103 32 77 111 100 101 0 ]
[a 26C 77 79 68 69 58 70 85 76 76 32 67 82 79 83 83 0 ]
[a 11C 70 85 76 76 32 67 82 79 83 83 0 ]
[a 15C 32 84 73 77 69 83 0 ]
[a 2C 80 83 69 32 80 85 83 72 32 65 78 89 32 66 84 78 0 ]
[a 29C 77 79 68 69 58 63 63 63 63 63 63 63 63 63 63 0 ]
[a 14C 63 63 63 63 63 63 63 63 63 63 0 ]
[a 23C 83 69 84 58 63 63 63 0 ]
[a 20C 79 75 58 0 ]
[a 21C 78 71 58 0 ]
[a 8C 77 79 68 69 58 0 ]
[a 16C 67 104 101 99 107 105 110 103 46 46 46 0 ]
[a 22C 83 69 84 58 83 99 97 110 87 97 105 116 40 109 115 41 0 ]
[a 19C 37 41 0 ]
[a 3C 32 32 77 111 100 101 32 32 83 101 108 101 99 116 32 32 0 ]
[a 24C 77 79 68 69 58 83 84 82 65 73 71 72 84 32 32 0 ]
[a 9C 83 84 82 65 73 71 72 84 32 32 0 ]
[a 27C 77 79 68 69 58 67 85 83 84 79 77 32 32 32 32 0 ]
[a 12C 67 85 83 84 79 77 32 32 32 32 0 ]
[a 5C 32 32 32 32 49 50 51 52 53 54 55 56 32 32 32 32 0 ]
[a 17C 32 32 32 32 49 50 51 52 53 54 55 56 32 32 32 32 0 ]
[a 25C 77 79 68 69 58 67 82 79 83 83 32 32 32 32 32 0 ]
[a 10C 67 82 79 83 83 32 32 32 32 32 0 ]
[a 28C 77 79 68 69 58 68 69 66 85 71 32 32 32 32 32 0 ]
[a 13C 68 69 66 85 71 32 32 32 32 32 0 ]
